//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_CapacitationCenter_Conectivity", "Conectivity", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.Conectivity), "CapacitationCenter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.CapacitationCenter), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_CapacitationCenter_PopulationAttended", "PopulationAttended", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.PopulationAttended), "CapacitationCenter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.CapacitationCenter), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_CapacitationCenter_SocialCause", "SocialCause", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.SocialCause), "CapacitationCenter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.CapacitationCenter), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_CapacitationCenter_SocialOrganization", "SocialOrganization", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.SocialOrganization), "CapacitationCenter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.CapacitationCenter), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_CapacitationCenter_State", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.State), "CapacitationCenter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.CapacitationCenter), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_Capacitation_Center_Information_PopulationAttended", "PopulationAttended", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.PopulationAttended), "CapacitationCenterInformation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.CapacitationCenterInformation), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_Capacitation_Center_Information_State", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MsftDashboard.Web.Models.State), "CapacitationCenterInformation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.CapacitationCenterInformation), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_CapacitationCenterInformation_Conectivity", "Conectivity", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.Conectivity), "CapacitationCenterInformation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.CapacitationCenterInformation), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_CapacitationCenterInformation_SocialCause", "SocialCause", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.SocialCause), "CapacitationCenterInformation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.CapacitationCenterInformation), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_CapacitationCenterInformation_SocialOrganization", "SocialOrganization", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.SocialOrganization), "CapacitationCenterInformation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.CapacitationCenterInformation), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_Competition_Competitor", "Competitor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.Competitor), "Competition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.Competition), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_Competition_Owner", "Owner", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.Owner), "Competition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.Competition), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_Competition_State", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MsftDashboard.Web.Models.State), "Competition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.Competition), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_Competition_Types", "TypeSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.TypeSource), "Competition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.Competition), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_MicrosoftProgramState_Contacts2", "Contacts", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MsftDashboard.Web.Models.Contact), "MicrosoftProgramState", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.MicrosoftProgramState), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_MicrosoftProgramState_Contacts3", "Contacts", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MsftDashboard.Web.Models.Contact), "MicrosoftProgramState", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.MicrosoftProgramState), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_OpenSourceStateCommunity_Contacts", "Contacts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.Contact), "OpenSourceStateCommunity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.OpenSourceStateCommunity), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_StateProgram1_Contacts", "Contacts", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MsftDashboard.Web.Models.Contact), "StateProgram", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.StateProgram), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_StateProgram1_Contacts1", "Contacts", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MsftDashboard.Web.Models.Contact), "StateProgram", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.StateProgram), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_Education_Information_State_State", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.State), "EducationInformationState", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.EducationInformationState), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_Enlace_Test_Education_Information_State", "EducationInformationState", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.EducationInformationState), "EnlaceTest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.EnlaceTest), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_Main_Universities_Education_Information_State", "EducationInformationState", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.EducationInformationState), "MainUniversities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.MainUniversity), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_Schools_Information_Education_Information_State", "EducationInformationState", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.EducationInformationState), "SchoolsInformation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.SchoolsInformation), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_SEP_Project_State_Education_Information_State", "EducationInformationState", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.EducationInformationState), "SEPProjectState", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.SEPProjectState), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_Students_Information_Education_Information_State", "EducationInformationState", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.EducationInformationState), "StudentsInformation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.StudentsInformation), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_Teachers_Information_Education_Information_State", "EducationInformationState", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.EducationInformationState), "TeachersInformation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.TeachersInformation), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_EnlaceTest_SchoolGrade", "SchoolGrade", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.SchoolGrade), "EnlaceTest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.EnlaceTest), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_Main_Universities_Universities", "Universities", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.University), "MainUniversities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.MainUniversity), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_MexicoAgreement_State", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.State), "MexicoAgreement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.MexicoAgreement), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_MexicoAgreement_TypeAgreement", "TypeAgreement", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.TypeAgreement), "MexicoAgreement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.MexicoAgreement), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_MicrosoftProgramState_Owner", "Owner", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.Owner), "MicrosoftProgramState", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.MicrosoftProgramState), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_MicrosoftProgramState_Partner", "Partner", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.Partner), "MicrosoftProgramState", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.MicrosoftProgramState), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_MicrosoftProgramState_Program", "Program", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.Program), "MicrosoftProgramState", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.MicrosoftProgramState), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_MicrosoftProgramState_Source1", "Source", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.Source), "MicrosoftProgramState", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.MicrosoftProgramState), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_MicrosoftProgramState_State", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.State), "MicrosoftProgramState", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.MicrosoftProgramState), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_MicrosoftProgramState_Types", "TypeSource", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MsftDashboard.Web.Models.TypeSource), "MicrosoftProgramState", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.MicrosoftProgramState), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_Municipality_State", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.State), "Municipality", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.Municipality), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_Political_Information_Municipality_Municipality", "Municipality", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.Municipality), "PoliticalInformationMunicipality", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.PoliticalInformationMunicipality), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_OpenSourceState_Penetration", "Penetration", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.Penetration), "OpenSourceState", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.OpenSourceState), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_OpenSourceState_Products", "Products", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.Product), "OpenSourceState", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.OpenSourceState), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_OpenSourceState_State", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.State), "OpenSourceState", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.OpenSourceState), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_OpenSourceState_TypeProduct", "TypeProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.TypeProduct), "OpenSourceState", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.OpenSourceState), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_OpenSourceStateCommunity_State", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MsftDashboard.Web.Models.State), "OpenSourceStateCommunity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.OpenSourceStateCommunity), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_OpenSourceStateProvider_Products", "Products", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.Product), "OpenSourceStateProvider", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.OpenSourceStateProvider), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_OpenSourceStateProvider_State", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MsftDashboard.Web.Models.State), "OpenSourceStateProvider", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.OpenSourceStateProvider), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_StateProgram_Owner", "Owner", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.Owner), "StateProgram", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.StateProgram), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_StateProgram_Partner", "Partner", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.Partner), "StateProgram", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.StateProgram), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_Political_Information_Municipality_Political_Party", "PoliticalParty", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.PoliticalParty), "PoliticalInformationMunicipality", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.PoliticalInformationMunicipality), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_Political_Information_State_Political_Party", "PoliticalParty", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.PoliticalParty), "PoliticalInformationState", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.PoliticalInformationState), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_Political_Information_State_State", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.State), "PoliticalInformationState", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.PoliticalInformationState), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_PoliticalInformationStateFiles_PoliticalInformationState", "PoliticalInformationState", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.PoliticalInformationState), "PoliticalInformationStateFiles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.PoliticalInformationStateFile), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_Social_Organization_Information_PopulationAttended", "PopulationAttended", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.PopulationAttended), "SocialOrganizationInformation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.SocialOrganizationInformation), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_Products_TypeProduct", "TypeProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.TypeProduct), "Products", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.Product), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_StateProgram_Program", "Program", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.Program), "StateProgram", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.StateProgram), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_Schools_Information_School_Level", "SchoolLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.SchoolLevel), "SchoolsInformation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.SchoolsInformation), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_Students_Information_School_Level", "SchoolLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.SchoolLevel), "StudentsInformation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.StudentsInformation), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_Teachers_Information_School_Level", "SchoolLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.SchoolLevel), "TeachersInformation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.TeachersInformation), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_Schools_Information_School_Type", "SchoolType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.SchoolType), "SchoolsInformation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.SchoolsInformation), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_Students_Information_School_Type", "SchoolType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.SchoolType), "StudentsInformation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.StudentsInformation), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_Teachers_Information_School_Type", "SchoolType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.SchoolType), "TeachersInformation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.TeachersInformation), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_SEPProjectState_TypeSepProject", "TypeSepProject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.TypeSepProject), "SEPProjectState", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.SEPProjectState), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_Social_Organization_Information_Social_Cause", "SocialCause", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.SocialCause), "SocialOrganizationInformation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.SocialOrganizationInformation), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_Social_Organization_Information_State", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.State), "SocialOrganizationInformation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.SocialOrganizationInformation), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_StateProgram_Source", "Source", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.Source), "StateProgram", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.StateProgram), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_State_Economic_Info_State", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.State), "StateEconomicInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.StateEconomicInfo), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_StateProgram_State", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.State), "StateProgram", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.StateProgram), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_Universities_State", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.State), "Universities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.University), true)]
[assembly: EdmRelationshipAttribute("TestArchiveModel", "FK_StateProgram_TypeSource", "TypeSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MsftDashboard.Web.Models.TypeSource), "StateProgram", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MsftDashboard.Web.Models.StateProgram), true)]

#endregion

namespace MsftDashboard.Web.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class TestArchiveEntities1 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new TestArchiveEntities1 object using the connection string found in the 'TestArchiveEntities1' section of the application configuration file.
        /// </summary>
        public TestArchiveEntities1() : base("name=TestArchiveEntities1", "TestArchiveEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TestArchiveEntities1 object.
        /// </summary>
        public TestArchiveEntities1(string connectionString) : base(connectionString, "TestArchiveEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TestArchiveEntities1 object.
        /// </summary>
        public TestArchiveEntities1(EntityConnection connection) : base(connection, "TestArchiveEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CapacitationCenter> CapacitationCenters
        {
            get
            {
                if ((_CapacitationCenters == null))
                {
                    _CapacitationCenters = base.CreateObjectSet<CapacitationCenter>("CapacitationCenters");
                }
                return _CapacitationCenters;
            }
        }
        private ObjectSet<CapacitationCenter> _CapacitationCenters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CapacitationCenterInformation> CapacitationCenterInformations
        {
            get
            {
                if ((_CapacitationCenterInformations == null))
                {
                    _CapacitationCenterInformations = base.CreateObjectSet<CapacitationCenterInformation>("CapacitationCenterInformations");
                }
                return _CapacitationCenterInformations;
            }
        }
        private ObjectSet<CapacitationCenterInformation> _CapacitationCenterInformations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Competition> Competitions
        {
            get
            {
                if ((_Competitions == null))
                {
                    _Competitions = base.CreateObjectSet<Competition>("Competitions");
                }
                return _Competitions;
            }
        }
        private ObjectSet<Competition> _Competitions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Competitor> Competitors
        {
            get
            {
                if ((_Competitors == null))
                {
                    _Competitors = base.CreateObjectSet<Competitor>("Competitors");
                }
                return _Competitors;
            }
        }
        private ObjectSet<Competitor> _Competitors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Conectivity> Conectivities
        {
            get
            {
                if ((_Conectivities == null))
                {
                    _Conectivities = base.CreateObjectSet<Conectivity>("Conectivities");
                }
                return _Conectivities;
            }
        }
        private ObjectSet<Conectivity> _Conectivities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contact> Contacts
        {
            get
            {
                if ((_Contacts == null))
                {
                    _Contacts = base.CreateObjectSet<Contact>("Contacts");
                }
                return _Contacts;
            }
        }
        private ObjectSet<Contact> _Contacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EducationInformationState> EducationInformationStates
        {
            get
            {
                if ((_EducationInformationStates == null))
                {
                    _EducationInformationStates = base.CreateObjectSet<EducationInformationState>("EducationInformationStates");
                }
                return _EducationInformationStates;
            }
        }
        private ObjectSet<EducationInformationState> _EducationInformationStates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EnlaceTest> EnlaceTests
        {
            get
            {
                if ((_EnlaceTests == null))
                {
                    _EnlaceTests = base.CreateObjectSet<EnlaceTest>("EnlaceTests");
                }
                return _EnlaceTests;
            }
        }
        private ObjectSet<EnlaceTest> _EnlaceTests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MainUniversity> MainUniversities
        {
            get
            {
                if ((_MainUniversities == null))
                {
                    _MainUniversities = base.CreateObjectSet<MainUniversity>("MainUniversities");
                }
                return _MainUniversities;
            }
        }
        private ObjectSet<MainUniversity> _MainUniversities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MexicoAgreement> MexicoAgreements
        {
            get
            {
                if ((_MexicoAgreements == null))
                {
                    _MexicoAgreements = base.CreateObjectSet<MexicoAgreement>("MexicoAgreements");
                }
                return _MexicoAgreements;
            }
        }
        private ObjectSet<MexicoAgreement> _MexicoAgreements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MicrosoftProgramState> MicrosoftProgramStates
        {
            get
            {
                if ((_MicrosoftProgramStates == null))
                {
                    _MicrosoftProgramStates = base.CreateObjectSet<MicrosoftProgramState>("MicrosoftProgramStates");
                }
                return _MicrosoftProgramStates;
            }
        }
        private ObjectSet<MicrosoftProgramState> _MicrosoftProgramStates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Month> Months
        {
            get
            {
                if ((_Months == null))
                {
                    _Months = base.CreateObjectSet<Month>("Months");
                }
                return _Months;
            }
        }
        private ObjectSet<Month> _Months;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Municipality> Municipalities
        {
            get
            {
                if ((_Municipalities == null))
                {
                    _Municipalities = base.CreateObjectSet<Municipality>("Municipalities");
                }
                return _Municipalities;
            }
        }
        private ObjectSet<Municipality> _Municipalities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OpenSourceState> OpenSourceStates
        {
            get
            {
                if ((_OpenSourceStates == null))
                {
                    _OpenSourceStates = base.CreateObjectSet<OpenSourceState>("OpenSourceStates");
                }
                return _OpenSourceStates;
            }
        }
        private ObjectSet<OpenSourceState> _OpenSourceStates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OpenSourceStateCommunity> OpenSourceStateCommunities
        {
            get
            {
                if ((_OpenSourceStateCommunities == null))
                {
                    _OpenSourceStateCommunities = base.CreateObjectSet<OpenSourceStateCommunity>("OpenSourceStateCommunities");
                }
                return _OpenSourceStateCommunities;
            }
        }
        private ObjectSet<OpenSourceStateCommunity> _OpenSourceStateCommunities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OpenSourceStateProvider> OpenSourceStateProviders
        {
            get
            {
                if ((_OpenSourceStateProviders == null))
                {
                    _OpenSourceStateProviders = base.CreateObjectSet<OpenSourceStateProvider>("OpenSourceStateProviders");
                }
                return _OpenSourceStateProviders;
            }
        }
        private ObjectSet<OpenSourceStateProvider> _OpenSourceStateProviders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Organization> Organizations
        {
            get
            {
                if ((_Organizations == null))
                {
                    _Organizations = base.CreateObjectSet<Organization>("Organizations");
                }
                return _Organizations;
            }
        }
        private ObjectSet<Organization> _Organizations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Owner> Owners
        {
            get
            {
                if ((_Owners == null))
                {
                    _Owners = base.CreateObjectSet<Owner>("Owners");
                }
                return _Owners;
            }
        }
        private ObjectSet<Owner> _Owners;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Partner> Partners
        {
            get
            {
                if ((_Partners == null))
                {
                    _Partners = base.CreateObjectSet<Partner>("Partners");
                }
                return _Partners;
            }
        }
        private ObjectSet<Partner> _Partners;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Penetration> Penetrations
        {
            get
            {
                if ((_Penetrations == null))
                {
                    _Penetrations = base.CreateObjectSet<Penetration>("Penetrations");
                }
                return _Penetrations;
            }
        }
        private ObjectSet<Penetration> _Penetrations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PoliticalInformationMunicipality> PoliticalInformationMunicipalities
        {
            get
            {
                if ((_PoliticalInformationMunicipalities == null))
                {
                    _PoliticalInformationMunicipalities = base.CreateObjectSet<PoliticalInformationMunicipality>("PoliticalInformationMunicipalities");
                }
                return _PoliticalInformationMunicipalities;
            }
        }
        private ObjectSet<PoliticalInformationMunicipality> _PoliticalInformationMunicipalities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PoliticalInformationState> PoliticalInformationStates
        {
            get
            {
                if ((_PoliticalInformationStates == null))
                {
                    _PoliticalInformationStates = base.CreateObjectSet<PoliticalInformationState>("PoliticalInformationStates");
                }
                return _PoliticalInformationStates;
            }
        }
        private ObjectSet<PoliticalInformationState> _PoliticalInformationStates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PoliticalInformationStateFile> PoliticalInformationStateFiles
        {
            get
            {
                if ((_PoliticalInformationStateFiles == null))
                {
                    _PoliticalInformationStateFiles = base.CreateObjectSet<PoliticalInformationStateFile>("PoliticalInformationStateFiles");
                }
                return _PoliticalInformationStateFiles;
            }
        }
        private ObjectSet<PoliticalInformationStateFile> _PoliticalInformationStateFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PoliticalParty> PoliticalParties
        {
            get
            {
                if ((_PoliticalParties == null))
                {
                    _PoliticalParties = base.CreateObjectSet<PoliticalParty>("PoliticalParties");
                }
                return _PoliticalParties;
            }
        }
        private ObjectSet<PoliticalParty> _PoliticalParties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PopulationAttended> PopulationAttendeds
        {
            get
            {
                if ((_PopulationAttendeds == null))
                {
                    _PopulationAttendeds = base.CreateObjectSet<PopulationAttended>("PopulationAttendeds");
                }
                return _PopulationAttendeds;
            }
        }
        private ObjectSet<PopulationAttended> _PopulationAttendeds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Program> Programs
        {
            get
            {
                if ((_Programs == null))
                {
                    _Programs = base.CreateObjectSet<Program>("Programs");
                }
                return _Programs;
            }
        }
        private ObjectSet<Program> _Programs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SchoolGrade> SchoolGrades
        {
            get
            {
                if ((_SchoolGrades == null))
                {
                    _SchoolGrades = base.CreateObjectSet<SchoolGrade>("SchoolGrades");
                }
                return _SchoolGrades;
            }
        }
        private ObjectSet<SchoolGrade> _SchoolGrades;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SchoolLevel> SchoolLevels
        {
            get
            {
                if ((_SchoolLevels == null))
                {
                    _SchoolLevels = base.CreateObjectSet<SchoolLevel>("SchoolLevels");
                }
                return _SchoolLevels;
            }
        }
        private ObjectSet<SchoolLevel> _SchoolLevels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SchoolsInformation> SchoolsInformations
        {
            get
            {
                if ((_SchoolsInformations == null))
                {
                    _SchoolsInformations = base.CreateObjectSet<SchoolsInformation>("SchoolsInformations");
                }
                return _SchoolsInformations;
            }
        }
        private ObjectSet<SchoolsInformation> _SchoolsInformations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SchoolType> SchoolTypes
        {
            get
            {
                if ((_SchoolTypes == null))
                {
                    _SchoolTypes = base.CreateObjectSet<SchoolType>("SchoolTypes");
                }
                return _SchoolTypes;
            }
        }
        private ObjectSet<SchoolType> _SchoolTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SEPProjectState> SEPProjectStates
        {
            get
            {
                if ((_SEPProjectStates == null))
                {
                    _SEPProjectStates = base.CreateObjectSet<SEPProjectState>("SEPProjectStates");
                }
                return _SEPProjectStates;
            }
        }
        private ObjectSet<SEPProjectState> _SEPProjectStates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SocialCause> SocialCauses
        {
            get
            {
                if ((_SocialCauses == null))
                {
                    _SocialCauses = base.CreateObjectSet<SocialCause>("SocialCauses");
                }
                return _SocialCauses;
            }
        }
        private ObjectSet<SocialCause> _SocialCauses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SocialOrganization> SocialOrganizations
        {
            get
            {
                if ((_SocialOrganizations == null))
                {
                    _SocialOrganizations = base.CreateObjectSet<SocialOrganization>("SocialOrganizations");
                }
                return _SocialOrganizations;
            }
        }
        private ObjectSet<SocialOrganization> _SocialOrganizations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SocialOrganizationInformation> SocialOrganizationInformations
        {
            get
            {
                if ((_SocialOrganizationInformations == null))
                {
                    _SocialOrganizationInformations = base.CreateObjectSet<SocialOrganizationInformation>("SocialOrganizationInformations");
                }
                return _SocialOrganizationInformations;
            }
        }
        private ObjectSet<SocialOrganizationInformation> _SocialOrganizationInformations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Source> Sources
        {
            get
            {
                if ((_Sources == null))
                {
                    _Sources = base.CreateObjectSet<Source>("Sources");
                }
                return _Sources;
            }
        }
        private ObjectSet<Source> _Sources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<State> States
        {
            get
            {
                if ((_States == null))
                {
                    _States = base.CreateObjectSet<State>("States");
                }
                return _States;
            }
        }
        private ObjectSet<State> _States;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StateEconomicInfo> StateEconomicInfoes
        {
            get
            {
                if ((_StateEconomicInfoes == null))
                {
                    _StateEconomicInfoes = base.CreateObjectSet<StateEconomicInfo>("StateEconomicInfoes");
                }
                return _StateEconomicInfoes;
            }
        }
        private ObjectSet<StateEconomicInfo> _StateEconomicInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StateProgram> StatePrograms
        {
            get
            {
                if ((_StatePrograms == null))
                {
                    _StatePrograms = base.CreateObjectSet<StateProgram>("StatePrograms");
                }
                return _StatePrograms;
            }
        }
        private ObjectSet<StateProgram> _StatePrograms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StudentsInformation> StudentsInformations
        {
            get
            {
                if ((_StudentsInformations == null))
                {
                    _StudentsInformations = base.CreateObjectSet<StudentsInformation>("StudentsInformations");
                }
                return _StudentsInformations;
            }
        }
        private ObjectSet<StudentsInformation> _StudentsInformations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TeachersInformation> TeachersInformations
        {
            get
            {
                if ((_TeachersInformations == null))
                {
                    _TeachersInformations = base.CreateObjectSet<TeachersInformation>("TeachersInformations");
                }
                return _TeachersInformations;
            }
        }
        private ObjectSet<TeachersInformation> _TeachersInformations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TypeAgreement> TypeAgreements
        {
            get
            {
                if ((_TypeAgreements == null))
                {
                    _TypeAgreements = base.CreateObjectSet<TypeAgreement>("TypeAgreements");
                }
                return _TypeAgreements;
            }
        }
        private ObjectSet<TypeAgreement> _TypeAgreements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TypeProduct> TypeProducts
        {
            get
            {
                if ((_TypeProducts == null))
                {
                    _TypeProducts = base.CreateObjectSet<TypeProduct>("TypeProducts");
                }
                return _TypeProducts;
            }
        }
        private ObjectSet<TypeProduct> _TypeProducts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TypeSepProject> TypeSepProjects
        {
            get
            {
                if ((_TypeSepProjects == null))
                {
                    _TypeSepProjects = base.CreateObjectSet<TypeSepProject>("TypeSepProjects");
                }
                return _TypeSepProjects;
            }
        }
        private ObjectSet<TypeSepProject> _TypeSepProjects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TypeSource> TypeSources
        {
            get
            {
                if ((_TypeSources == null))
                {
                    _TypeSources = base.CreateObjectSet<TypeSource>("TypeSources");
                }
                return _TypeSources;
            }
        }
        private ObjectSet<TypeSource> _TypeSources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<University> Universities
        {
            get
            {
                if ((_Universities == null))
                {
                    _Universities = base.CreateObjectSet<University>("Universities");
                }
                return _Universities;
            }
        }
        private ObjectSet<University> _Universities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Year> Years
        {
            get
            {
                if ((_Years == null))
                {
                    _Years = base.CreateObjectSet<Year>("Years");
                }
                return _Years;
            }
        }
        private ObjectSet<Year> _Years;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CapacitationCenters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCapacitationCenters(CapacitationCenter capacitationCenter)
        {
            base.AddObject("CapacitationCenters", capacitationCenter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CapacitationCenterInformations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCapacitationCenterInformations(CapacitationCenterInformation capacitationCenterInformation)
        {
            base.AddObject("CapacitationCenterInformations", capacitationCenterInformation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Competitions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompetitions(Competition competition)
        {
            base.AddObject("Competitions", competition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Competitors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompetitors(Competitor competitor)
        {
            base.AddObject("Competitors", competitor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Conectivities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConectivities(Conectivity conectivity)
        {
            base.AddObject("Conectivities", conectivity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContacts(Contact contact)
        {
            base.AddObject("Contacts", contact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EducationInformationStates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEducationInformationStates(EducationInformationState educationInformationState)
        {
            base.AddObject("EducationInformationStates", educationInformationState);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EnlaceTests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEnlaceTests(EnlaceTest enlaceTest)
        {
            base.AddObject("EnlaceTests", enlaceTest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MainUniversities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMainUniversities(MainUniversity mainUniversity)
        {
            base.AddObject("MainUniversities", mainUniversity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MexicoAgreements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMexicoAgreements(MexicoAgreement mexicoAgreement)
        {
            base.AddObject("MexicoAgreements", mexicoAgreement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MicrosoftProgramStates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMicrosoftProgramStates(MicrosoftProgramState microsoftProgramState)
        {
            base.AddObject("MicrosoftProgramStates", microsoftProgramState);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Months EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMonths(Month month)
        {
            base.AddObject("Months", month);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Municipalities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMunicipalities(Municipality municipality)
        {
            base.AddObject("Municipalities", municipality);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OpenSourceStates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOpenSourceStates(OpenSourceState openSourceState)
        {
            base.AddObject("OpenSourceStates", openSourceState);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OpenSourceStateCommunities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOpenSourceStateCommunities(OpenSourceStateCommunity openSourceStateCommunity)
        {
            base.AddObject("OpenSourceStateCommunities", openSourceStateCommunity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OpenSourceStateProviders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOpenSourceStateProviders(OpenSourceStateProvider openSourceStateProvider)
        {
            base.AddObject("OpenSourceStateProviders", openSourceStateProvider);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Organizations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrganizations(Organization organization)
        {
            base.AddObject("Organizations", organization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Owners EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOwners(Owner owner)
        {
            base.AddObject("Owners", owner);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Partners EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPartners(Partner partner)
        {
            base.AddObject("Partners", partner);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Penetrations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPenetrations(Penetration penetration)
        {
            base.AddObject("Penetrations", penetration);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PoliticalInformationMunicipalities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPoliticalInformationMunicipalities(PoliticalInformationMunicipality politicalInformationMunicipality)
        {
            base.AddObject("PoliticalInformationMunicipalities", politicalInformationMunicipality);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PoliticalInformationStates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPoliticalInformationStates(PoliticalInformationState politicalInformationState)
        {
            base.AddObject("PoliticalInformationStates", politicalInformationState);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PoliticalInformationStateFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPoliticalInformationStateFiles(PoliticalInformationStateFile politicalInformationStateFile)
        {
            base.AddObject("PoliticalInformationStateFiles", politicalInformationStateFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PoliticalParties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPoliticalParties(PoliticalParty politicalParty)
        {
            base.AddObject("PoliticalParties", politicalParty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PopulationAttendeds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPopulationAttendeds(PopulationAttended populationAttended)
        {
            base.AddObject("PopulationAttendeds", populationAttended);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Programs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrograms(Program program)
        {
            base.AddObject("Programs", program);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SchoolGrades EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSchoolGrades(SchoolGrade schoolGrade)
        {
            base.AddObject("SchoolGrades", schoolGrade);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SchoolLevels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSchoolLevels(SchoolLevel schoolLevel)
        {
            base.AddObject("SchoolLevels", schoolLevel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SchoolsInformations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSchoolsInformations(SchoolsInformation schoolsInformation)
        {
            base.AddObject("SchoolsInformations", schoolsInformation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SchoolTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSchoolTypes(SchoolType schoolType)
        {
            base.AddObject("SchoolTypes", schoolType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SEPProjectStates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSEPProjectStates(SEPProjectState sEPProjectState)
        {
            base.AddObject("SEPProjectStates", sEPProjectState);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SocialCauses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSocialCauses(SocialCause socialCause)
        {
            base.AddObject("SocialCauses", socialCause);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SocialOrganizations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSocialOrganizations(SocialOrganization socialOrganization)
        {
            base.AddObject("SocialOrganizations", socialOrganization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SocialOrganizationInformations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSocialOrganizationInformations(SocialOrganizationInformation socialOrganizationInformation)
        {
            base.AddObject("SocialOrganizationInformations", socialOrganizationInformation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSources(Source source)
        {
            base.AddObject("Sources", source);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the States EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStates(State state)
        {
            base.AddObject("States", state);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StateEconomicInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStateEconomicInfoes(StateEconomicInfo stateEconomicInfo)
        {
            base.AddObject("StateEconomicInfoes", stateEconomicInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StatePrograms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStatePrograms(StateProgram stateProgram)
        {
            base.AddObject("StatePrograms", stateProgram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StudentsInformations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStudentsInformations(StudentsInformation studentsInformation)
        {
            base.AddObject("StudentsInformations", studentsInformation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TeachersInformations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeachersInformations(TeachersInformation teachersInformation)
        {
            base.AddObject("TeachersInformations", teachersInformation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TypeAgreements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTypeAgreements(TypeAgreement typeAgreement)
        {
            base.AddObject("TypeAgreements", typeAgreement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TypeProducts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTypeProducts(TypeProduct typeProduct)
        {
            base.AddObject("TypeProducts", typeProduct);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TypeSepProjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTypeSepProjects(TypeSepProject typeSepProject)
        {
            base.AddObject("TypeSepProjects", typeSepProject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TypeSources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTypeSources(TypeSource typeSource)
        {
            base.AddObject("TypeSources", typeSource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Universities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUniversities(University university)
        {
            base.AddObject("Universities", university);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Years EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToYears(Year year)
        {
            base.AddObject("Years", year);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="CapacitationCenter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CapacitationCenter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CapacitationCenter object.
        /// </summary>
        /// <param name="idCapacitationCenterInformation">Initial value of the IdCapacitationCenterInformation property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="idSocialOrganization">Initial value of the IdSocialOrganization property.</param>
        /// <param name="idSocialCause">Initial value of the IdSocialCause property.</param>
        /// <param name="idPopulationAttended">Initial value of the IdPopulationAttended property.</param>
        /// <param name="idConectivity">Initial value of the IdConectivity property.</param>
        /// <param name="investment">Initial value of the Investment property.</param>
        /// <param name="softwareInvesment">Initial value of the SoftwareInvesment property.</param>
        /// <param name="numberOfUsers">Initial value of the NumberOfUsers property.</param>
        /// <param name="numberOfTrainingUsers">Initial value of the NumberOfTrainingUsers property.</param>
        /// <param name="idState">Initial value of the IdState property.</param>
        /// <param name="dateFrom">Initial value of the DateFrom property.</param>
        public static CapacitationCenter CreateCapacitationCenter(global::System.Int32 idCapacitationCenterInformation, global::System.String name, global::System.Int32 idSocialOrganization, global::System.Int32 idSocialCause, global::System.Int32 idPopulationAttended, global::System.Int32 idConectivity, global::System.Double investment, global::System.Double softwareInvesment, global::System.Int32 numberOfUsers, global::System.Int32 numberOfTrainingUsers, global::System.Int32 idState, global::System.DateTime dateFrom)
        {
            CapacitationCenter capacitationCenter = new CapacitationCenter();
            capacitationCenter.IdCapacitationCenterInformation = idCapacitationCenterInformation;
            capacitationCenter.Name = name;
            capacitationCenter.IdSocialOrganization = idSocialOrganization;
            capacitationCenter.IdSocialCause = idSocialCause;
            capacitationCenter.IdPopulationAttended = idPopulationAttended;
            capacitationCenter.IdConectivity = idConectivity;
            capacitationCenter.Investment = investment;
            capacitationCenter.SoftwareInvesment = softwareInvesment;
            capacitationCenter.NumberOfUsers = numberOfUsers;
            capacitationCenter.NumberOfTrainingUsers = numberOfTrainingUsers;
            capacitationCenter.IdState = idState;
            capacitationCenter.DateFrom = dateFrom;
            return capacitationCenter;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdCapacitationCenterInformation
        {
            get
            {
                return _IdCapacitationCenterInformation;
            }
            set
            {
                if (_IdCapacitationCenterInformation != value)
                {
                    OnIdCapacitationCenterInformationChanging(value);
                    ReportPropertyChanging("IdCapacitationCenterInformation");
                    _IdCapacitationCenterInformation = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdCapacitationCenterInformation");
                    OnIdCapacitationCenterInformationChanged();
                }
            }
        }
        private global::System.Int32 _IdCapacitationCenterInformation;
        partial void OnIdCapacitationCenterInformationChanging(global::System.Int32 value);
        partial void OnIdCapacitationCenterInformationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdSocialOrganization
        {
            get
            {
                return _IdSocialOrganization;
            }
            set
            {
                OnIdSocialOrganizationChanging(value);
                ReportPropertyChanging("IdSocialOrganization");
                _IdSocialOrganization = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdSocialOrganization");
                OnIdSocialOrganizationChanged();
            }
        }
        private global::System.Int32 _IdSocialOrganization;
        partial void OnIdSocialOrganizationChanging(global::System.Int32 value);
        partial void OnIdSocialOrganizationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdSocialCause
        {
            get
            {
                return _IdSocialCause;
            }
            set
            {
                OnIdSocialCauseChanging(value);
                ReportPropertyChanging("IdSocialCause");
                _IdSocialCause = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdSocialCause");
                OnIdSocialCauseChanged();
            }
        }
        private global::System.Int32 _IdSocialCause;
        partial void OnIdSocialCauseChanging(global::System.Int32 value);
        partial void OnIdSocialCauseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdPopulationAttended
        {
            get
            {
                return _IdPopulationAttended;
            }
            set
            {
                OnIdPopulationAttendedChanging(value);
                ReportPropertyChanging("IdPopulationAttended");
                _IdPopulationAttended = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdPopulationAttended");
                OnIdPopulationAttendedChanged();
            }
        }
        private global::System.Int32 _IdPopulationAttended;
        partial void OnIdPopulationAttendedChanging(global::System.Int32 value);
        partial void OnIdPopulationAttendedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdConectivity
        {
            get
            {
                return _IdConectivity;
            }
            set
            {
                OnIdConectivityChanging(value);
                ReportPropertyChanging("IdConectivity");
                _IdConectivity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdConectivity");
                OnIdConectivityChanged();
            }
        }
        private global::System.Int32 _IdConectivity;
        partial void OnIdConectivityChanging(global::System.Int32 value);
        partial void OnIdConectivityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Investment
        {
            get
            {
                return _Investment;
            }
            set
            {
                OnInvestmentChanging(value);
                ReportPropertyChanging("Investment");
                _Investment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Investment");
                OnInvestmentChanged();
            }
        }
        private global::System.Double _Investment;
        partial void OnInvestmentChanging(global::System.Double value);
        partial void OnInvestmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SoftwareInvesment
        {
            get
            {
                return _SoftwareInvesment;
            }
            set
            {
                OnSoftwareInvesmentChanging(value);
                ReportPropertyChanging("SoftwareInvesment");
                _SoftwareInvesment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SoftwareInvesment");
                OnSoftwareInvesmentChanged();
            }
        }
        private global::System.Double _SoftwareInvesment;
        partial void OnSoftwareInvesmentChanging(global::System.Double value);
        partial void OnSoftwareInvesmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfUsers
        {
            get
            {
                return _NumberOfUsers;
            }
            set
            {
                OnNumberOfUsersChanging(value);
                ReportPropertyChanging("NumberOfUsers");
                _NumberOfUsers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfUsers");
                OnNumberOfUsersChanged();
            }
        }
        private global::System.Int32 _NumberOfUsers;
        partial void OnNumberOfUsersChanging(global::System.Int32 value);
        partial void OnNumberOfUsersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfTrainingUsers
        {
            get
            {
                return _NumberOfTrainingUsers;
            }
            set
            {
                OnNumberOfTrainingUsersChanging(value);
                ReportPropertyChanging("NumberOfTrainingUsers");
                _NumberOfTrainingUsers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfTrainingUsers");
                OnNumberOfTrainingUsersChanged();
            }
        }
        private global::System.Int32 _NumberOfTrainingUsers;
        partial void OnNumberOfTrainingUsersChanging(global::System.Int32 value);
        partial void OnNumberOfTrainingUsersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdState
        {
            get
            {
                return _IdState;
            }
            set
            {
                OnIdStateChanging(value);
                ReportPropertyChanging("IdState");
                _IdState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdState");
                OnIdStateChanged();
            }
        }
        private global::System.Int32 _IdState;
        partial void OnIdStateChanging(global::System.Int32 value);
        partial void OnIdStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateFrom
        {
            get
            {
                return _DateFrom;
            }
            set
            {
                OnDateFromChanging(value);
                ReportPropertyChanging("DateFrom");
                _DateFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateFrom");
                OnDateFromChanged();
            }
        }
        private global::System.DateTime _DateFrom;
        partial void OnDateFromChanging(global::System.DateTime value);
        partial void OnDateFromChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_CapacitationCenter_Conectivity", "Conectivity")]
        public Conectivity Conectivity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conectivity>("TestArchiveModel.FK_CapacitationCenter_Conectivity", "Conectivity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conectivity>("TestArchiveModel.FK_CapacitationCenter_Conectivity", "Conectivity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Conectivity> ConectivityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conectivity>("TestArchiveModel.FK_CapacitationCenter_Conectivity", "Conectivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Conectivity>("TestArchiveModel.FK_CapacitationCenter_Conectivity", "Conectivity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_CapacitationCenter_PopulationAttended", "PopulationAttended")]
        public PopulationAttended PopulationAttended
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PopulationAttended>("TestArchiveModel.FK_CapacitationCenter_PopulationAttended", "PopulationAttended").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PopulationAttended>("TestArchiveModel.FK_CapacitationCenter_PopulationAttended", "PopulationAttended").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PopulationAttended> PopulationAttendedReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PopulationAttended>("TestArchiveModel.FK_CapacitationCenter_PopulationAttended", "PopulationAttended");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PopulationAttended>("TestArchiveModel.FK_CapacitationCenter_PopulationAttended", "PopulationAttended", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_CapacitationCenter_SocialCause", "SocialCause")]
        public SocialCause SocialCause
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SocialCause>("TestArchiveModel.FK_CapacitationCenter_SocialCause", "SocialCause").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SocialCause>("TestArchiveModel.FK_CapacitationCenter_SocialCause", "SocialCause").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SocialCause> SocialCauseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SocialCause>("TestArchiveModel.FK_CapacitationCenter_SocialCause", "SocialCause");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SocialCause>("TestArchiveModel.FK_CapacitationCenter_SocialCause", "SocialCause", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_CapacitationCenter_SocialOrganization", "SocialOrganization")]
        public SocialOrganization SocialOrganization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SocialOrganization>("TestArchiveModel.FK_CapacitationCenter_SocialOrganization", "SocialOrganization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SocialOrganization>("TestArchiveModel.FK_CapacitationCenter_SocialOrganization", "SocialOrganization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SocialOrganization> SocialOrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SocialOrganization>("TestArchiveModel.FK_CapacitationCenter_SocialOrganization", "SocialOrganization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SocialOrganization>("TestArchiveModel.FK_CapacitationCenter_SocialOrganization", "SocialOrganization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_CapacitationCenter_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_CapacitationCenter_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_CapacitationCenter_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_CapacitationCenter_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("TestArchiveModel.FK_CapacitationCenter_State", "State", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="CapacitationCenterInformation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CapacitationCenterInformation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CapacitationCenterInformation object.
        /// </summary>
        /// <param name="idCapacitationCenterInformation">Initial value of the IdCapacitationCenterInformation property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="idSocialOrganization">Initial value of the IdSocialOrganization property.</param>
        /// <param name="idSocialCause">Initial value of the IdSocialCause property.</param>
        /// <param name="investment">Initial value of the Investment property.</param>
        /// <param name="softwareInvesment">Initial value of the SoftwareInvesment property.</param>
        /// <param name="numberOfUsers">Initial value of the NumberOfUsers property.</param>
        /// <param name="numberOfTrainingUsers">Initial value of the NumberOfTrainingUsers property.</param>
        /// <param name="idConectivity">Initial value of the IdConectivity property.</param>
        /// <param name="idPopulationAttended">Initial value of the IdPopulationAttended property.</param>
        public static CapacitationCenterInformation CreateCapacitationCenterInformation(global::System.Int32 idCapacitationCenterInformation, global::System.String name, global::System.Int32 idSocialOrganization, global::System.Int32 idSocialCause, global::System.Double investment, global::System.Double softwareInvesment, global::System.Int32 numberOfUsers, global::System.Int32 numberOfTrainingUsers, global::System.Int32 idConectivity, global::System.Int32 idPopulationAttended)
        {
            CapacitationCenterInformation capacitationCenterInformation = new CapacitationCenterInformation();
            capacitationCenterInformation.IdCapacitationCenterInformation = idCapacitationCenterInformation;
            capacitationCenterInformation.Name = name;
            capacitationCenterInformation.IdSocialOrganization = idSocialOrganization;
            capacitationCenterInformation.IdSocialCause = idSocialCause;
            capacitationCenterInformation.Investment = investment;
            capacitationCenterInformation.SoftwareInvesment = softwareInvesment;
            capacitationCenterInformation.NumberOfUsers = numberOfUsers;
            capacitationCenterInformation.NumberOfTrainingUsers = numberOfTrainingUsers;
            capacitationCenterInformation.IdConectivity = idConectivity;
            capacitationCenterInformation.IdPopulationAttended = idPopulationAttended;
            return capacitationCenterInformation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdCapacitationCenterInformation
        {
            get
            {
                return _IdCapacitationCenterInformation;
            }
            set
            {
                if (_IdCapacitationCenterInformation != value)
                {
                    OnIdCapacitationCenterInformationChanging(value);
                    ReportPropertyChanging("IdCapacitationCenterInformation");
                    _IdCapacitationCenterInformation = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdCapacitationCenterInformation");
                    OnIdCapacitationCenterInformationChanged();
                }
            }
        }
        private global::System.Int32 _IdCapacitationCenterInformation;
        partial void OnIdCapacitationCenterInformationChanging(global::System.Int32 value);
        partial void OnIdCapacitationCenterInformationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdSocialOrganization
        {
            get
            {
                return _IdSocialOrganization;
            }
            set
            {
                OnIdSocialOrganizationChanging(value);
                ReportPropertyChanging("IdSocialOrganization");
                _IdSocialOrganization = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdSocialOrganization");
                OnIdSocialOrganizationChanged();
            }
        }
        private global::System.Int32 _IdSocialOrganization;
        partial void OnIdSocialOrganizationChanging(global::System.Int32 value);
        partial void OnIdSocialOrganizationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdSocialCause
        {
            get
            {
                return _IdSocialCause;
            }
            set
            {
                OnIdSocialCauseChanging(value);
                ReportPropertyChanging("IdSocialCause");
                _IdSocialCause = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdSocialCause");
                OnIdSocialCauseChanged();
            }
        }
        private global::System.Int32 _IdSocialCause;
        partial void OnIdSocialCauseChanging(global::System.Int32 value);
        partial void OnIdSocialCauseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Investment
        {
            get
            {
                return _Investment;
            }
            set
            {
                OnInvestmentChanging(value);
                ReportPropertyChanging("Investment");
                _Investment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Investment");
                OnInvestmentChanged();
            }
        }
        private global::System.Double _Investment;
        partial void OnInvestmentChanging(global::System.Double value);
        partial void OnInvestmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SoftwareInvesment
        {
            get
            {
                return _SoftwareInvesment;
            }
            set
            {
                OnSoftwareInvesmentChanging(value);
                ReportPropertyChanging("SoftwareInvesment");
                _SoftwareInvesment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SoftwareInvesment");
                OnSoftwareInvesmentChanged();
            }
        }
        private global::System.Double _SoftwareInvesment;
        partial void OnSoftwareInvesmentChanging(global::System.Double value);
        partial void OnSoftwareInvesmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfUsers
        {
            get
            {
                return _NumberOfUsers;
            }
            set
            {
                OnNumberOfUsersChanging(value);
                ReportPropertyChanging("NumberOfUsers");
                _NumberOfUsers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfUsers");
                OnNumberOfUsersChanged();
            }
        }
        private global::System.Int32 _NumberOfUsers;
        partial void OnNumberOfUsersChanging(global::System.Int32 value);
        partial void OnNumberOfUsersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfTrainingUsers
        {
            get
            {
                return _NumberOfTrainingUsers;
            }
            set
            {
                OnNumberOfTrainingUsersChanging(value);
                ReportPropertyChanging("NumberOfTrainingUsers");
                _NumberOfTrainingUsers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfTrainingUsers");
                OnNumberOfTrainingUsersChanged();
            }
        }
        private global::System.Int32 _NumberOfTrainingUsers;
        partial void OnNumberOfTrainingUsersChanging(global::System.Int32 value);
        partial void OnNumberOfTrainingUsersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdConectivity
        {
            get
            {
                return _IdConectivity;
            }
            set
            {
                OnIdConectivityChanging(value);
                ReportPropertyChanging("IdConectivity");
                _IdConectivity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdConectivity");
                OnIdConectivityChanged();
            }
        }
        private global::System.Int32 _IdConectivity;
        partial void OnIdConectivityChanging(global::System.Int32 value);
        partial void OnIdConectivityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IdState
        {
            get
            {
                return _IdState;
            }
            set
            {
                OnIdStateChanging(value);
                ReportPropertyChanging("IdState");
                _IdState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdState");
                OnIdStateChanged();
            }
        }
        private Nullable<global::System.Int32> _IdState;
        partial void OnIdStateChanging(Nullable<global::System.Int32> value);
        partial void OnIdStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateFrom
        {
            get
            {
                return _DateFrom;
            }
            set
            {
                OnDateFromChanging(value);
                ReportPropertyChanging("DateFrom");
                _DateFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateFrom");
                OnDateFromChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateFrom;
        partial void OnDateFromChanging(Nullable<global::System.DateTime> value);
        partial void OnDateFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdPopulationAttended
        {
            get
            {
                return _IdPopulationAttended;
            }
            set
            {
                OnIdPopulationAttendedChanging(value);
                ReportPropertyChanging("IdPopulationAttended");
                _IdPopulationAttended = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdPopulationAttended");
                OnIdPopulationAttendedChanged();
            }
        }
        private global::System.Int32 _IdPopulationAttended;
        partial void OnIdPopulationAttendedChanging(global::System.Int32 value);
        partial void OnIdPopulationAttendedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Capacitation_Center_Information_PopulationAttended", "PopulationAttended")]
        public PopulationAttended PopulationAttended
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PopulationAttended>("TestArchiveModel.FK_Capacitation_Center_Information_PopulationAttended", "PopulationAttended").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PopulationAttended>("TestArchiveModel.FK_Capacitation_Center_Information_PopulationAttended", "PopulationAttended").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PopulationAttended> PopulationAttendedReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PopulationAttended>("TestArchiveModel.FK_Capacitation_Center_Information_PopulationAttended", "PopulationAttended");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PopulationAttended>("TestArchiveModel.FK_Capacitation_Center_Information_PopulationAttended", "PopulationAttended", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Capacitation_Center_Information_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_Capacitation_Center_Information_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_Capacitation_Center_Information_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_Capacitation_Center_Information_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("TestArchiveModel.FK_Capacitation_Center_Information_State", "State", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_CapacitationCenterInformation_Conectivity", "Conectivity")]
        public Conectivity Conectivity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conectivity>("TestArchiveModel.FK_CapacitationCenterInformation_Conectivity", "Conectivity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conectivity>("TestArchiveModel.FK_CapacitationCenterInformation_Conectivity", "Conectivity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Conectivity> ConectivityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conectivity>("TestArchiveModel.FK_CapacitationCenterInformation_Conectivity", "Conectivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Conectivity>("TestArchiveModel.FK_CapacitationCenterInformation_Conectivity", "Conectivity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_CapacitationCenterInformation_SocialCause", "SocialCause")]
        public SocialCause SocialCause
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SocialCause>("TestArchiveModel.FK_CapacitationCenterInformation_SocialCause", "SocialCause").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SocialCause>("TestArchiveModel.FK_CapacitationCenterInformation_SocialCause", "SocialCause").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SocialCause> SocialCauseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SocialCause>("TestArchiveModel.FK_CapacitationCenterInformation_SocialCause", "SocialCause");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SocialCause>("TestArchiveModel.FK_CapacitationCenterInformation_SocialCause", "SocialCause", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_CapacitationCenterInformation_SocialOrganization", "SocialOrganization")]
        public SocialOrganization SocialOrganization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SocialOrganization>("TestArchiveModel.FK_CapacitationCenterInformation_SocialOrganization", "SocialOrganization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SocialOrganization>("TestArchiveModel.FK_CapacitationCenterInformation_SocialOrganization", "SocialOrganization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SocialOrganization> SocialOrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SocialOrganization>("TestArchiveModel.FK_CapacitationCenterInformation_SocialOrganization", "SocialOrganization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SocialOrganization>("TestArchiveModel.FK_CapacitationCenterInformation_SocialOrganization", "SocialOrganization", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="Competition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Competition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Competition object.
        /// </summary>
        /// <param name="idCompetition">Initial value of the IdCompetition property.</param>
        /// <param name="idCompetitor">Initial value of the IdCompetitor property.</param>
        /// <param name="idType">Initial value of the IdType property.</param>
        /// <param name="idOwner">Initial value of the IdOwner property.</param>
        /// <param name="investment">Initial value of the Investment property.</param>
        /// <param name="rOI">Initial value of the ROI property.</param>
        /// <param name="dateFrom">Initial value of the DateFrom property.</param>
        /// <param name="observations">Initial value of the Observations property.</param>
        public static Competition CreateCompetition(global::System.Int32 idCompetition, global::System.Int32 idCompetitor, global::System.Int32 idType, global::System.Int32 idOwner, global::System.Double investment, global::System.Double rOI, global::System.DateTime dateFrom, global::System.String observations)
        {
            Competition competition = new Competition();
            competition.IdCompetition = idCompetition;
            competition.IdCompetitor = idCompetitor;
            competition.IdType = idType;
            competition.IdOwner = idOwner;
            competition.Investment = investment;
            competition.ROI = rOI;
            competition.DateFrom = dateFrom;
            competition.Observations = observations;
            return competition;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdCompetition
        {
            get
            {
                return _IdCompetition;
            }
            set
            {
                if (_IdCompetition != value)
                {
                    OnIdCompetitionChanging(value);
                    ReportPropertyChanging("IdCompetition");
                    _IdCompetition = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdCompetition");
                    OnIdCompetitionChanged();
                }
            }
        }
        private global::System.Int32 _IdCompetition;
        partial void OnIdCompetitionChanging(global::System.Int32 value);
        partial void OnIdCompetitionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdCompetitor
        {
            get
            {
                return _IdCompetitor;
            }
            set
            {
                OnIdCompetitorChanging(value);
                ReportPropertyChanging("IdCompetitor");
                _IdCompetitor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdCompetitor");
                OnIdCompetitorChanged();
            }
        }
        private global::System.Int32 _IdCompetitor;
        partial void OnIdCompetitorChanging(global::System.Int32 value);
        partial void OnIdCompetitorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdType
        {
            get
            {
                return _IdType;
            }
            set
            {
                OnIdTypeChanging(value);
                ReportPropertyChanging("IdType");
                _IdType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdType");
                OnIdTypeChanged();
            }
        }
        private global::System.Int32 _IdType;
        partial void OnIdTypeChanging(global::System.Int32 value);
        partial void OnIdTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdOwner
        {
            get
            {
                return _IdOwner;
            }
            set
            {
                OnIdOwnerChanging(value);
                ReportPropertyChanging("IdOwner");
                _IdOwner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdOwner");
                OnIdOwnerChanged();
            }
        }
        private global::System.Int32 _IdOwner;
        partial void OnIdOwnerChanging(global::System.Int32 value);
        partial void OnIdOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Investment
        {
            get
            {
                return _Investment;
            }
            set
            {
                OnInvestmentChanging(value);
                ReportPropertyChanging("Investment");
                _Investment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Investment");
                OnInvestmentChanged();
            }
        }
        private global::System.Double _Investment;
        partial void OnInvestmentChanging(global::System.Double value);
        partial void OnInvestmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ROI
        {
            get
            {
                return _ROI;
            }
            set
            {
                OnROIChanging(value);
                ReportPropertyChanging("ROI");
                _ROI = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ROI");
                OnROIChanged();
            }
        }
        private global::System.Double _ROI;
        partial void OnROIChanging(global::System.Double value);
        partial void OnROIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateFrom
        {
            get
            {
                return _DateFrom;
            }
            set
            {
                OnDateFromChanging(value);
                ReportPropertyChanging("DateFrom");
                _DateFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateFrom");
                OnDateFromChanged();
            }
        }
        private global::System.DateTime _DateFrom;
        partial void OnDateFromChanging(global::System.DateTime value);
        partial void OnDateFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateTo
        {
            get
            {
                return _DateTo;
            }
            set
            {
                OnDateToChanging(value);
                ReportPropertyChanging("DateTo");
                _DateTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTo");
                OnDateToChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateTo;
        partial void OnDateToChanging(Nullable<global::System.DateTime> value);
        partial void OnDateToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Observations
        {
            get
            {
                return _Observations;
            }
            set
            {
                OnObservationsChanging(value);
                ReportPropertyChanging("Observations");
                _Observations = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Observations");
                OnObservationsChanged();
            }
        }
        private global::System.String _Observations;
        partial void OnObservationsChanging(global::System.String value);
        partial void OnObservationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Progress
        {
            get
            {
                return _Progress;
            }
            set
            {
                OnProgressChanging(value);
                ReportPropertyChanging("Progress");
                _Progress = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Progress");
                OnProgressChanged();
            }
        }
        private Nullable<global::System.Int32> _Progress;
        partial void OnProgressChanging(Nullable<global::System.Int32> value);
        partial void OnProgressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _Number;
        partial void OnNumberChanging(Nullable<global::System.Int32> value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IdState
        {
            get
            {
                return _IdState;
            }
            set
            {
                OnIdStateChanging(value);
                ReportPropertyChanging("IdState");
                _IdState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdState");
                OnIdStateChanged();
            }
        }
        private Nullable<global::System.Int32> _IdState;
        partial void OnIdStateChanging(Nullable<global::System.Int32> value);
        partial void OnIdStateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Competition_Competitor", "Competitor")]
        public Competitor Competitor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competitor>("TestArchiveModel.FK_Competition_Competitor", "Competitor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competitor>("TestArchiveModel.FK_Competition_Competitor", "Competitor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Competitor> CompetitorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competitor>("TestArchiveModel.FK_Competition_Competitor", "Competitor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Competitor>("TestArchiveModel.FK_Competition_Competitor", "Competitor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Competition_Owner", "Owner")]
        public Owner Owner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Owner>("TestArchiveModel.FK_Competition_Owner", "Owner").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Owner>("TestArchiveModel.FK_Competition_Owner", "Owner").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Owner> OwnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Owner>("TestArchiveModel.FK_Competition_Owner", "Owner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Owner>("TestArchiveModel.FK_Competition_Owner", "Owner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Competition_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_Competition_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_Competition_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_Competition_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("TestArchiveModel.FK_Competition_State", "State", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Competition_Types", "TypeSource")]
        public TypeSource TypeSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeSource>("TestArchiveModel.FK_Competition_Types", "TypeSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeSource>("TestArchiveModel.FK_Competition_Types", "TypeSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TypeSource> TypeSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeSource>("TestArchiveModel.FK_Competition_Types", "TypeSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TypeSource>("TestArchiveModel.FK_Competition_Types", "TypeSource", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="Competitor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Competitor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Competitor object.
        /// </summary>
        /// <param name="idCompetitor">Initial value of the IdCompetitor property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Competitor CreateCompetitor(global::System.Int32 idCompetitor, global::System.String name)
        {
            Competitor competitor = new Competitor();
            competitor.IdCompetitor = idCompetitor;
            competitor.Name = name;
            return competitor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdCompetitor
        {
            get
            {
                return _IdCompetitor;
            }
            set
            {
                if (_IdCompetitor != value)
                {
                    OnIdCompetitorChanging(value);
                    ReportPropertyChanging("IdCompetitor");
                    _IdCompetitor = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdCompetitor");
                    OnIdCompetitorChanged();
                }
            }
        }
        private global::System.Int32 _IdCompetitor;
        partial void OnIdCompetitorChanging(global::System.Int32 value);
        partial void OnIdCompetitorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Competition_Competitor", "Competition")]
        public EntityCollection<Competition> Competitions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Competition>("TestArchiveModel.FK_Competition_Competitor", "Competition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Competition>("TestArchiveModel.FK_Competition_Competitor", "Competition", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="Conectivity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Conectivity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Conectivity object.
        /// </summary>
        /// <param name="idConectivity">Initial value of the IdConectivity property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Conectivity CreateConectivity(global::System.Int32 idConectivity, global::System.String name)
        {
            Conectivity conectivity = new Conectivity();
            conectivity.IdConectivity = idConectivity;
            conectivity.Name = name;
            return conectivity;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdConectivity
        {
            get
            {
                return _IdConectivity;
            }
            set
            {
                if (_IdConectivity != value)
                {
                    OnIdConectivityChanging(value);
                    ReportPropertyChanging("IdConectivity");
                    _IdConectivity = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdConectivity");
                    OnIdConectivityChanged();
                }
            }
        }
        private global::System.Int32 _IdConectivity;
        partial void OnIdConectivityChanging(global::System.Int32 value);
        partial void OnIdConectivityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_CapacitationCenter_Conectivity", "CapacitationCenter")]
        public EntityCollection<CapacitationCenter> CapacitationCenters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CapacitationCenter>("TestArchiveModel.FK_CapacitationCenter_Conectivity", "CapacitationCenter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CapacitationCenter>("TestArchiveModel.FK_CapacitationCenter_Conectivity", "CapacitationCenter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_CapacitationCenterInformation_Conectivity", "CapacitationCenterInformation")]
        public EntityCollection<CapacitationCenterInformation> CapacitationCenterInformations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CapacitationCenterInformation>("TestArchiveModel.FK_CapacitationCenterInformation_Conectivity", "CapacitationCenterInformation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CapacitationCenterInformation>("TestArchiveModel.FK_CapacitationCenterInformation_Conectivity", "CapacitationCenterInformation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="Contact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contact object.
        /// </summary>
        /// <param name="idContact">Initial value of the IdContact property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        public static Contact CreateContact(global::System.Int32 idContact, global::System.String firstName, global::System.String lastName, global::System.String email)
        {
            Contact contact = new Contact();
            contact.IdContact = idContact;
            contact.FirstName = firstName;
            contact.LastName = lastName;
            contact.Email = email;
            return contact;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdContact
        {
            get
            {
                return _IdContact;
            }
            set
            {
                if (_IdContact != value)
                {
                    OnIdContactChanging(value);
                    ReportPropertyChanging("IdContact");
                    _IdContact = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdContact");
                    OnIdContactChanged();
                }
            }
        }
        private global::System.Int32 _IdContact;
        partial void OnIdContactChanging(global::System.Int32 value);
        partial void OnIdContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CellPhone
        {
            get
            {
                return _CellPhone;
            }
            set
            {
                OnCellPhoneChanging(value);
                ReportPropertyChanging("CellPhone");
                _CellPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CellPhone");
                OnCellPhoneChanged();
            }
        }
        private global::System.String _CellPhone;
        partial void OnCellPhoneChanging(global::System.String value);
        partial void OnCellPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Telephone
        {
            get
            {
                return _Telephone;
            }
            set
            {
                OnTelephoneChanging(value);
                ReportPropertyChanging("Telephone");
                _Telephone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Telephone");
                OnTelephoneChanged();
            }
        }
        private global::System.String _Telephone;
        partial void OnTelephoneChanging(global::System.String value);
        partial void OnTelephoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _Status;
        partial void OnStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnStatusChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_MicrosoftProgramState_Contacts2", "MicrosoftProgramState")]
        public EntityCollection<MicrosoftProgramState> MicrosoftProgramStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MicrosoftProgramState>("TestArchiveModel.FK_MicrosoftProgramState_Contacts2", "MicrosoftProgramState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MicrosoftProgramState>("TestArchiveModel.FK_MicrosoftProgramState_Contacts2", "MicrosoftProgramState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_MicrosoftProgramState_Contacts3", "MicrosoftProgramState")]
        public EntityCollection<MicrosoftProgramState> MicrosoftProgramStates1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MicrosoftProgramState>("TestArchiveModel.FK_MicrosoftProgramState_Contacts3", "MicrosoftProgramState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MicrosoftProgramState>("TestArchiveModel.FK_MicrosoftProgramState_Contacts3", "MicrosoftProgramState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_OpenSourceStateCommunity_Contacts", "OpenSourceStateCommunity")]
        public EntityCollection<OpenSourceStateCommunity> OpenSourceStateCommunities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OpenSourceStateCommunity>("TestArchiveModel.FK_OpenSourceStateCommunity_Contacts", "OpenSourceStateCommunity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OpenSourceStateCommunity>("TestArchiveModel.FK_OpenSourceStateCommunity_Contacts", "OpenSourceStateCommunity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_StateProgram1_Contacts", "StateProgram")]
        public EntityCollection<StateProgram> StatePrograms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StateProgram>("TestArchiveModel.FK_StateProgram1_Contacts", "StateProgram");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StateProgram>("TestArchiveModel.FK_StateProgram1_Contacts", "StateProgram", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_StateProgram1_Contacts1", "StateProgram")]
        public EntityCollection<StateProgram> StatePrograms1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StateProgram>("TestArchiveModel.FK_StateProgram1_Contacts1", "StateProgram");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StateProgram>("TestArchiveModel.FK_StateProgram1_Contacts1", "StateProgram", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="EducationInformationState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EducationInformationState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EducationInformationState object.
        /// </summary>
        /// <param name="idEducationInformationState">Initial value of the IdEducationInformationState property.</param>
        /// <param name="investment">Initial value of the Investment property.</param>
        /// <param name="currentExpenditures">Initial value of the CurrentExpenditures property.</param>
        /// <param name="investmentPublicEducation">Initial value of the InvestmentPublicEducation property.</param>
        /// <param name="investmentHighSchool">Initial value of the InvestmentHighSchool property.</param>
        /// <param name="investmentITProjects">Initial value of the InvestmentITProjects property.</param>
        /// <param name="numberInvestigators">Initial value of the NumberInvestigators property.</param>
        /// <param name="idState">Initial value of the IdState property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        public static EducationInformationState CreateEducationInformationState(global::System.Int32 idEducationInformationState, global::System.Double investment, global::System.Double currentExpenditures, global::System.Double investmentPublicEducation, global::System.Double investmentHighSchool, global::System.Double investmentITProjects, global::System.Int32 numberInvestigators, global::System.Int32 idState, global::System.Int32 year)
        {
            EducationInformationState educationInformationState = new EducationInformationState();
            educationInformationState.IdEducationInformationState = idEducationInformationState;
            educationInformationState.Investment = investment;
            educationInformationState.CurrentExpenditures = currentExpenditures;
            educationInformationState.InvestmentPublicEducation = investmentPublicEducation;
            educationInformationState.InvestmentHighSchool = investmentHighSchool;
            educationInformationState.InvestmentITProjects = investmentITProjects;
            educationInformationState.NumberInvestigators = numberInvestigators;
            educationInformationState.IdState = idState;
            educationInformationState.Year = year;
            return educationInformationState;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdEducationInformationState
        {
            get
            {
                return _IdEducationInformationState;
            }
            set
            {
                if (_IdEducationInformationState != value)
                {
                    OnIdEducationInformationStateChanging(value);
                    ReportPropertyChanging("IdEducationInformationState");
                    _IdEducationInformationState = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdEducationInformationState");
                    OnIdEducationInformationStateChanged();
                }
            }
        }
        private global::System.Int32 _IdEducationInformationState;
        partial void OnIdEducationInformationStateChanging(global::System.Int32 value);
        partial void OnIdEducationInformationStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Investment
        {
            get
            {
                return _Investment;
            }
            set
            {
                OnInvestmentChanging(value);
                ReportPropertyChanging("Investment");
                _Investment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Investment");
                OnInvestmentChanged();
            }
        }
        private global::System.Double _Investment;
        partial void OnInvestmentChanging(global::System.Double value);
        partial void OnInvestmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CurrentExpenditures
        {
            get
            {
                return _CurrentExpenditures;
            }
            set
            {
                OnCurrentExpendituresChanging(value);
                ReportPropertyChanging("CurrentExpenditures");
                _CurrentExpenditures = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentExpenditures");
                OnCurrentExpendituresChanged();
            }
        }
        private global::System.Double _CurrentExpenditures;
        partial void OnCurrentExpendituresChanging(global::System.Double value);
        partial void OnCurrentExpendituresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double InvestmentPublicEducation
        {
            get
            {
                return _InvestmentPublicEducation;
            }
            set
            {
                OnInvestmentPublicEducationChanging(value);
                ReportPropertyChanging("InvestmentPublicEducation");
                _InvestmentPublicEducation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestmentPublicEducation");
                OnInvestmentPublicEducationChanged();
            }
        }
        private global::System.Double _InvestmentPublicEducation;
        partial void OnInvestmentPublicEducationChanging(global::System.Double value);
        partial void OnInvestmentPublicEducationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double InvestmentHighSchool
        {
            get
            {
                return _InvestmentHighSchool;
            }
            set
            {
                OnInvestmentHighSchoolChanging(value);
                ReportPropertyChanging("InvestmentHighSchool");
                _InvestmentHighSchool = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestmentHighSchool");
                OnInvestmentHighSchoolChanged();
            }
        }
        private global::System.Double _InvestmentHighSchool;
        partial void OnInvestmentHighSchoolChanging(global::System.Double value);
        partial void OnInvestmentHighSchoolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double InvestmentITProjects
        {
            get
            {
                return _InvestmentITProjects;
            }
            set
            {
                OnInvestmentITProjectsChanging(value);
                ReportPropertyChanging("InvestmentITProjects");
                _InvestmentITProjects = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestmentITProjects");
                OnInvestmentITProjectsChanged();
            }
        }
        private global::System.Double _InvestmentITProjects;
        partial void OnInvestmentITProjectsChanging(global::System.Double value);
        partial void OnInvestmentITProjectsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberInvestigators
        {
            get
            {
                return _NumberInvestigators;
            }
            set
            {
                OnNumberInvestigatorsChanging(value);
                ReportPropertyChanging("NumberInvestigators");
                _NumberInvestigators = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberInvestigators");
                OnNumberInvestigatorsChanged();
            }
        }
        private global::System.Int32 _NumberInvestigators;
        partial void OnNumberInvestigatorsChanging(global::System.Int32 value);
        partial void OnNumberInvestigatorsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdState
        {
            get
            {
                return _IdState;
            }
            set
            {
                OnIdStateChanging(value);
                ReportPropertyChanging("IdState");
                _IdState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdState");
                OnIdStateChanged();
            }
        }
        private global::System.Int32 _IdState;
        partial void OnIdStateChanging(global::System.Int32 value);
        partial void OnIdStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Education_Information_State_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_Education_Information_State_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_Education_Information_State_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_Education_Information_State_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("TestArchiveModel.FK_Education_Information_State_State", "State", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Enlace_Test_Education_Information_State", "EnlaceTest")]
        public EntityCollection<EnlaceTest> EnlaceTests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EnlaceTest>("TestArchiveModel.FK_Enlace_Test_Education_Information_State", "EnlaceTest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EnlaceTest>("TestArchiveModel.FK_Enlace_Test_Education_Information_State", "EnlaceTest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Main_Universities_Education_Information_State", "MainUniversities")]
        public EntityCollection<MainUniversity> MainUniversities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MainUniversity>("TestArchiveModel.FK_Main_Universities_Education_Information_State", "MainUniversities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MainUniversity>("TestArchiveModel.FK_Main_Universities_Education_Information_State", "MainUniversities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Schools_Information_Education_Information_State", "SchoolsInformation")]
        public EntityCollection<SchoolsInformation> SchoolsInformations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SchoolsInformation>("TestArchiveModel.FK_Schools_Information_Education_Information_State", "SchoolsInformation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SchoolsInformation>("TestArchiveModel.FK_Schools_Information_Education_Information_State", "SchoolsInformation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_SEP_Project_State_Education_Information_State", "SEPProjectState")]
        public EntityCollection<SEPProjectState> SEPProjectStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SEPProjectState>("TestArchiveModel.FK_SEP_Project_State_Education_Information_State", "SEPProjectState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SEPProjectState>("TestArchiveModel.FK_SEP_Project_State_Education_Information_State", "SEPProjectState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Students_Information_Education_Information_State", "StudentsInformation")]
        public EntityCollection<StudentsInformation> StudentsInformations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StudentsInformation>("TestArchiveModel.FK_Students_Information_Education_Information_State", "StudentsInformation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StudentsInformation>("TestArchiveModel.FK_Students_Information_Education_Information_State", "StudentsInformation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Teachers_Information_Education_Information_State", "TeachersInformation")]
        public EntityCollection<TeachersInformation> TeachersInformations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeachersInformation>("TestArchiveModel.FK_Teachers_Information_Education_Information_State", "TeachersInformation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeachersInformation>("TestArchiveModel.FK_Teachers_Information_Education_Information_State", "TeachersInformation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="EnlaceTest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EnlaceTest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EnlaceTest object.
        /// </summary>
        /// <param name="idEnlaceTest">Initial value of the IdEnlaceTest property.</param>
        /// <param name="idEducationInformationState">Initial value of the IdEducationInformationState property.</param>
        /// <param name="idSchoolGrade">Initial value of the IdSchoolGrade property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        public static EnlaceTest CreateEnlaceTest(global::System.Int32 idEnlaceTest, global::System.Int32 idEducationInformationState, global::System.Int32 idSchoolGrade, global::System.Int64 number)
        {
            EnlaceTest enlaceTest = new EnlaceTest();
            enlaceTest.IdEnlaceTest = idEnlaceTest;
            enlaceTest.IdEducationInformationState = idEducationInformationState;
            enlaceTest.IdSchoolGrade = idSchoolGrade;
            enlaceTest.Number = number;
            return enlaceTest;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdEnlaceTest
        {
            get
            {
                return _IdEnlaceTest;
            }
            set
            {
                if (_IdEnlaceTest != value)
                {
                    OnIdEnlaceTestChanging(value);
                    ReportPropertyChanging("IdEnlaceTest");
                    _IdEnlaceTest = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdEnlaceTest");
                    OnIdEnlaceTestChanged();
                }
            }
        }
        private global::System.Int32 _IdEnlaceTest;
        partial void OnIdEnlaceTestChanging(global::System.Int32 value);
        partial void OnIdEnlaceTestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdEducationInformationState
        {
            get
            {
                return _IdEducationInformationState;
            }
            set
            {
                OnIdEducationInformationStateChanging(value);
                ReportPropertyChanging("IdEducationInformationState");
                _IdEducationInformationState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdEducationInformationState");
                OnIdEducationInformationStateChanged();
            }
        }
        private global::System.Int32 _IdEducationInformationState;
        partial void OnIdEducationInformationStateChanging(global::System.Int32 value);
        partial void OnIdEducationInformationStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdSchoolGrade
        {
            get
            {
                return _IdSchoolGrade;
            }
            set
            {
                OnIdSchoolGradeChanging(value);
                ReportPropertyChanging("IdSchoolGrade");
                _IdSchoolGrade = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdSchoolGrade");
                OnIdSchoolGradeChanged();
            }
        }
        private global::System.Int32 _IdSchoolGrade;
        partial void OnIdSchoolGradeChanging(global::System.Int32 value);
        partial void OnIdSchoolGradeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int64 _Number;
        partial void OnNumberChanging(global::System.Int64 value);
        partial void OnNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Enlace_Test_Education_Information_State", "EducationInformationState")]
        public EducationInformationState EducationInformationState
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationInformationState>("TestArchiveModel.FK_Enlace_Test_Education_Information_State", "EducationInformationState").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationInformationState>("TestArchiveModel.FK_Enlace_Test_Education_Information_State", "EducationInformationState").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EducationInformationState> EducationInformationStateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationInformationState>("TestArchiveModel.FK_Enlace_Test_Education_Information_State", "EducationInformationState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EducationInformationState>("TestArchiveModel.FK_Enlace_Test_Education_Information_State", "EducationInformationState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_EnlaceTest_SchoolGrade", "SchoolGrade")]
        public SchoolGrade SchoolGrade
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolGrade>("TestArchiveModel.FK_EnlaceTest_SchoolGrade", "SchoolGrade").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolGrade>("TestArchiveModel.FK_EnlaceTest_SchoolGrade", "SchoolGrade").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SchoolGrade> SchoolGradeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolGrade>("TestArchiveModel.FK_EnlaceTest_SchoolGrade", "SchoolGrade");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SchoolGrade>("TestArchiveModel.FK_EnlaceTest_SchoolGrade", "SchoolGrade", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="MainUniversity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MainUniversity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MainUniversity object.
        /// </summary>
        /// <param name="idMainUniversitie">Initial value of the IdMainUniversitie property.</param>
        /// <param name="idEducationInformationState">Initial value of the IdEducationInformationState property.</param>
        /// <param name="penetration">Initial value of the Penetration property.</param>
        /// <param name="idUniversity">Initial value of the IdUniversity property.</param>
        public static MainUniversity CreateMainUniversity(global::System.Int32 idMainUniversitie, global::System.Int32 idEducationInformationState, global::System.Int32 penetration, global::System.Int32 idUniversity)
        {
            MainUniversity mainUniversity = new MainUniversity();
            mainUniversity.IdMainUniversitie = idMainUniversitie;
            mainUniversity.IdEducationInformationState = idEducationInformationState;
            mainUniversity.Penetration = penetration;
            mainUniversity.IdUniversity = idUniversity;
            return mainUniversity;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdMainUniversitie
        {
            get
            {
                return _IdMainUniversitie;
            }
            set
            {
                if (_IdMainUniversitie != value)
                {
                    OnIdMainUniversitieChanging(value);
                    ReportPropertyChanging("IdMainUniversitie");
                    _IdMainUniversitie = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdMainUniversitie");
                    OnIdMainUniversitieChanged();
                }
            }
        }
        private global::System.Int32 _IdMainUniversitie;
        partial void OnIdMainUniversitieChanging(global::System.Int32 value);
        partial void OnIdMainUniversitieChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdEducationInformationState
        {
            get
            {
                return _IdEducationInformationState;
            }
            set
            {
                OnIdEducationInformationStateChanging(value);
                ReportPropertyChanging("IdEducationInformationState");
                _IdEducationInformationState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdEducationInformationState");
                OnIdEducationInformationStateChanged();
            }
        }
        private global::System.Int32 _IdEducationInformationState;
        partial void OnIdEducationInformationStateChanging(global::System.Int32 value);
        partial void OnIdEducationInformationStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Penetration
        {
            get
            {
                return _Penetration;
            }
            set
            {
                OnPenetrationChanging(value);
                ReportPropertyChanging("Penetration");
                _Penetration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Penetration");
                OnPenetrationChanged();
            }
        }
        private global::System.Int32 _Penetration;
        partial void OnPenetrationChanging(global::System.Int32 value);
        partial void OnPenetrationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdUniversity
        {
            get
            {
                return _IdUniversity;
            }
            set
            {
                OnIdUniversityChanging(value);
                ReportPropertyChanging("IdUniversity");
                _IdUniversity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdUniversity");
                OnIdUniversityChanged();
            }
        }
        private global::System.Int32 _IdUniversity;
        partial void OnIdUniversityChanging(global::System.Int32 value);
        partial void OnIdUniversityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Main_Universities_Education_Information_State", "EducationInformationState")]
        public EducationInformationState EducationInformationState
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationInformationState>("TestArchiveModel.FK_Main_Universities_Education_Information_State", "EducationInformationState").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationInformationState>("TestArchiveModel.FK_Main_Universities_Education_Information_State", "EducationInformationState").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EducationInformationState> EducationInformationStateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationInformationState>("TestArchiveModel.FK_Main_Universities_Education_Information_State", "EducationInformationState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EducationInformationState>("TestArchiveModel.FK_Main_Universities_Education_Information_State", "EducationInformationState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Main_Universities_Universities", "Universities")]
        public University University
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("TestArchiveModel.FK_Main_Universities_Universities", "Universities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("TestArchiveModel.FK_Main_Universities_Universities", "Universities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<University> UniversityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("TestArchiveModel.FK_Main_Universities_Universities", "Universities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<University>("TestArchiveModel.FK_Main_Universities_Universities", "Universities", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="MexicoAgreement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MexicoAgreement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MexicoAgreement object.
        /// </summary>
        /// <param name="idMexicoAgreements">Initial value of the IdMexicoAgreements property.</param>
        /// <param name="observations">Initial value of the Observations property.</param>
        /// <param name="dateFrom">Initial value of the DateFrom property.</param>
        /// <param name="dateTo">Initial value of the DateTo property.</param>
        /// <param name="idTypeAgreement">Initial value of the IdTypeAgreement property.</param>
        /// <param name="progress">Initial value of the Progress property.</param>
        /// <param name="idState">Initial value of the IdState property.</param>
        public static MexicoAgreement CreateMexicoAgreement(global::System.Int32 idMexicoAgreements, global::System.String observations, global::System.DateTime dateFrom, global::System.DateTime dateTo, global::System.Int32 idTypeAgreement, global::System.Int32 progress, global::System.Int32 idState)
        {
            MexicoAgreement mexicoAgreement = new MexicoAgreement();
            mexicoAgreement.IdMexicoAgreements = idMexicoAgreements;
            mexicoAgreement.Observations = observations;
            mexicoAgreement.DateFrom = dateFrom;
            mexicoAgreement.DateTo = dateTo;
            mexicoAgreement.IdTypeAgreement = idTypeAgreement;
            mexicoAgreement.Progress = progress;
            mexicoAgreement.IdState = idState;
            return mexicoAgreement;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdMexicoAgreements
        {
            get
            {
                return _IdMexicoAgreements;
            }
            set
            {
                if (_IdMexicoAgreements != value)
                {
                    OnIdMexicoAgreementsChanging(value);
                    ReportPropertyChanging("IdMexicoAgreements");
                    _IdMexicoAgreements = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdMexicoAgreements");
                    OnIdMexicoAgreementsChanged();
                }
            }
        }
        private global::System.Int32 _IdMexicoAgreements;
        partial void OnIdMexicoAgreementsChanging(global::System.Int32 value);
        partial void OnIdMexicoAgreementsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Observations
        {
            get
            {
                return _Observations;
            }
            set
            {
                OnObservationsChanging(value);
                ReportPropertyChanging("Observations");
                _Observations = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Observations");
                OnObservationsChanged();
            }
        }
        private global::System.String _Observations;
        partial void OnObservationsChanging(global::System.String value);
        partial void OnObservationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateFrom
        {
            get
            {
                return _DateFrom;
            }
            set
            {
                OnDateFromChanging(value);
                ReportPropertyChanging("DateFrom");
                _DateFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateFrom");
                OnDateFromChanged();
            }
        }
        private global::System.DateTime _DateFrom;
        partial void OnDateFromChanging(global::System.DateTime value);
        partial void OnDateFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTo
        {
            get
            {
                return _DateTo;
            }
            set
            {
                OnDateToChanging(value);
                ReportPropertyChanging("DateTo");
                _DateTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTo");
                OnDateToChanged();
            }
        }
        private global::System.DateTime _DateTo;
        partial void OnDateToChanging(global::System.DateTime value);
        partial void OnDateToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdTypeAgreement
        {
            get
            {
                return _IdTypeAgreement;
            }
            set
            {
                OnIdTypeAgreementChanging(value);
                ReportPropertyChanging("IdTypeAgreement");
                _IdTypeAgreement = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdTypeAgreement");
                OnIdTypeAgreementChanged();
            }
        }
        private global::System.Int32 _IdTypeAgreement;
        partial void OnIdTypeAgreementChanging(global::System.Int32 value);
        partial void OnIdTypeAgreementChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Progress
        {
            get
            {
                return _Progress;
            }
            set
            {
                OnProgressChanging(value);
                ReportPropertyChanging("Progress");
                _Progress = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Progress");
                OnProgressChanged();
            }
        }
        private global::System.Int32 _Progress;
        partial void OnProgressChanging(global::System.Int32 value);
        partial void OnProgressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdState
        {
            get
            {
                return _IdState;
            }
            set
            {
                OnIdStateChanging(value);
                ReportPropertyChanging("IdState");
                _IdState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdState");
                OnIdStateChanged();
            }
        }
        private global::System.Int32 _IdState;
        partial void OnIdStateChanging(global::System.Int32 value);
        partial void OnIdStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_MexicoAgreement_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_MexicoAgreement_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_MexicoAgreement_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_MexicoAgreement_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("TestArchiveModel.FK_MexicoAgreement_State", "State", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_MexicoAgreement_TypeAgreement", "TypeAgreement")]
        public TypeAgreement TypeAgreement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeAgreement>("TestArchiveModel.FK_MexicoAgreement_TypeAgreement", "TypeAgreement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeAgreement>("TestArchiveModel.FK_MexicoAgreement_TypeAgreement", "TypeAgreement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TypeAgreement> TypeAgreementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeAgreement>("TestArchiveModel.FK_MexicoAgreement_TypeAgreement", "TypeAgreement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TypeAgreement>("TestArchiveModel.FK_MexicoAgreement_TypeAgreement", "TypeAgreement", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="MicrosoftProgramState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MicrosoftProgramState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MicrosoftProgramState object.
        /// </summary>
        /// <param name="idMsftProgramState">Initial value of the IdMsftProgramState property.</param>
        /// <param name="idOwner">Initial value of the IdOwner property.</param>
        /// <param name="idPartner">Initial value of the IdPartner property.</param>
        /// <param name="idProgram">Initial value of the IdProgram property.</param>
        /// <param name="idSource">Initial value of the IdSource property.</param>
        /// <param name="idState">Initial value of the IdState property.</param>
        public static MicrosoftProgramState CreateMicrosoftProgramState(global::System.Int32 idMsftProgramState, global::System.Int32 idOwner, global::System.Int32 idPartner, global::System.Int32 idProgram, global::System.Int32 idSource, global::System.Int32 idState)
        {
            MicrosoftProgramState microsoftProgramState = new MicrosoftProgramState();
            microsoftProgramState.IdMsftProgramState = idMsftProgramState;
            microsoftProgramState.IdOwner = idOwner;
            microsoftProgramState.IdPartner = idPartner;
            microsoftProgramState.IdProgram = idProgram;
            microsoftProgramState.IdSource = idSource;
            microsoftProgramState.IdState = idState;
            return microsoftProgramState;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdMsftProgramState
        {
            get
            {
                return _IdMsftProgramState;
            }
            set
            {
                if (_IdMsftProgramState != value)
                {
                    OnIdMsftProgramStateChanging(value);
                    ReportPropertyChanging("IdMsftProgramState");
                    _IdMsftProgramState = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdMsftProgramState");
                    OnIdMsftProgramStateChanged();
                }
            }
        }
        private global::System.Int32 _IdMsftProgramState;
        partial void OnIdMsftProgramStateChanging(global::System.Int32 value);
        partial void OnIdMsftProgramStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdOwner
        {
            get
            {
                return _IdOwner;
            }
            set
            {
                OnIdOwnerChanging(value);
                ReportPropertyChanging("IdOwner");
                _IdOwner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdOwner");
                OnIdOwnerChanged();
            }
        }
        private global::System.Int32 _IdOwner;
        partial void OnIdOwnerChanging(global::System.Int32 value);
        partial void OnIdOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdPartner
        {
            get
            {
                return _IdPartner;
            }
            set
            {
                OnIdPartnerChanging(value);
                ReportPropertyChanging("IdPartner");
                _IdPartner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdPartner");
                OnIdPartnerChanged();
            }
        }
        private global::System.Int32 _IdPartner;
        partial void OnIdPartnerChanging(global::System.Int32 value);
        partial void OnIdPartnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdProgram
        {
            get
            {
                return _IdProgram;
            }
            set
            {
                OnIdProgramChanging(value);
                ReportPropertyChanging("IdProgram");
                _IdProgram = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdProgram");
                OnIdProgramChanged();
            }
        }
        private global::System.Int32 _IdProgram;
        partial void OnIdProgramChanging(global::System.Int32 value);
        partial void OnIdProgramChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdSource
        {
            get
            {
                return _IdSource;
            }
            set
            {
                OnIdSourceChanging(value);
                ReportPropertyChanging("IdSource");
                _IdSource = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdSource");
                OnIdSourceChanged();
            }
        }
        private global::System.Int32 _IdSource;
        partial void OnIdSourceChanging(global::System.Int32 value);
        partial void OnIdSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IdType
        {
            get
            {
                return _IdType;
            }
            set
            {
                OnIdTypeChanging(value);
                ReportPropertyChanging("IdType");
                _IdType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdType");
                OnIdTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _IdType;
        partial void OnIdTypeChanging(Nullable<global::System.Int32> value);
        partial void OnIdTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IdContactMsft
        {
            get
            {
                return _IdContactMsft;
            }
            set
            {
                OnIdContactMsftChanging(value);
                ReportPropertyChanging("IdContactMsft");
                _IdContactMsft = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdContactMsft");
                OnIdContactMsftChanged();
            }
        }
        private Nullable<global::System.Int32> _IdContactMsft;
        partial void OnIdContactMsftChanging(Nullable<global::System.Int32> value);
        partial void OnIdContactMsftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IdContactState
        {
            get
            {
                return _IdContactState;
            }
            set
            {
                OnIdContactStateChanging(value);
                ReportPropertyChanging("IdContactState");
                _IdContactState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdContactState");
                OnIdContactStateChanged();
            }
        }
        private Nullable<global::System.Int32> _IdContactState;
        partial void OnIdContactStateChanging(Nullable<global::System.Int32> value);
        partial void OnIdContactStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateFrom
        {
            get
            {
                return _DateFrom;
            }
            set
            {
                OnDateFromChanging(value);
                ReportPropertyChanging("DateFrom");
                _DateFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateFrom");
                OnDateFromChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateFrom;
        partial void OnDateFromChanging(Nullable<global::System.DateTime> value);
        partial void OnDateFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateTo
        {
            get
            {
                return _DateTo;
            }
            set
            {
                OnDateToChanging(value);
                ReportPropertyChanging("DateTo");
                _DateTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTo");
                OnDateToChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateTo;
        partial void OnDateToChanging(Nullable<global::System.DateTime> value);
        partial void OnDateToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _Number;
        partial void OnNumberChanging(Nullable<global::System.Int32> value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Progress
        {
            get
            {
                return _Progress;
            }
            set
            {
                OnProgressChanging(value);
                ReportPropertyChanging("Progress");
                _Progress = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Progress");
                OnProgressChanged();
            }
        }
        private Nullable<global::System.Int32> _Progress;
        partial void OnProgressChanging(Nullable<global::System.Int32> value);
        partial void OnProgressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ROI
        {
            get
            {
                return _ROI;
            }
            set
            {
                OnROIChanging(value);
                ReportPropertyChanging("ROI");
                _ROI = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ROI");
                OnROIChanged();
            }
        }
        private Nullable<global::System.Double> _ROI;
        partial void OnROIChanging(Nullable<global::System.Double> value);
        partial void OnROIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Investment
        {
            get
            {
                return _Investment;
            }
            set
            {
                OnInvestmentChanging(value);
                ReportPropertyChanging("Investment");
                _Investment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Investment");
                OnInvestmentChanged();
            }
        }
        private Nullable<global::System.Double> _Investment;
        partial void OnInvestmentChanging(Nullable<global::System.Double> value);
        partial void OnInvestmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdState
        {
            get
            {
                return _IdState;
            }
            set
            {
                OnIdStateChanging(value);
                ReportPropertyChanging("IdState");
                _IdState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdState");
                OnIdStateChanged();
            }
        }
        private global::System.Int32 _IdState;
        partial void OnIdStateChanging(global::System.Int32 value);
        partial void OnIdStateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_MicrosoftProgramState_Contacts2", "Contacts")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("TestArchiveModel.FK_MicrosoftProgramState_Contacts2", "Contacts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("TestArchiveModel.FK_MicrosoftProgramState_Contacts2", "Contacts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("TestArchiveModel.FK_MicrosoftProgramState_Contacts2", "Contacts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("TestArchiveModel.FK_MicrosoftProgramState_Contacts2", "Contacts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_MicrosoftProgramState_Contacts3", "Contacts")]
        public Contact Contact1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("TestArchiveModel.FK_MicrosoftProgramState_Contacts3", "Contacts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("TestArchiveModel.FK_MicrosoftProgramState_Contacts3", "Contacts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> Contact1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("TestArchiveModel.FK_MicrosoftProgramState_Contacts3", "Contacts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("TestArchiveModel.FK_MicrosoftProgramState_Contacts3", "Contacts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_MicrosoftProgramState_Owner", "Owner")]
        public Owner Owner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Owner>("TestArchiveModel.FK_MicrosoftProgramState_Owner", "Owner").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Owner>("TestArchiveModel.FK_MicrosoftProgramState_Owner", "Owner").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Owner> OwnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Owner>("TestArchiveModel.FK_MicrosoftProgramState_Owner", "Owner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Owner>("TestArchiveModel.FK_MicrosoftProgramState_Owner", "Owner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_MicrosoftProgramState_Partner", "Partner")]
        public Partner Partner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Partner>("TestArchiveModel.FK_MicrosoftProgramState_Partner", "Partner").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Partner>("TestArchiveModel.FK_MicrosoftProgramState_Partner", "Partner").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Partner> PartnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Partner>("TestArchiveModel.FK_MicrosoftProgramState_Partner", "Partner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Partner>("TestArchiveModel.FK_MicrosoftProgramState_Partner", "Partner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_MicrosoftProgramState_Program", "Program")]
        public Program Program
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Program>("TestArchiveModel.FK_MicrosoftProgramState_Program", "Program").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Program>("TestArchiveModel.FK_MicrosoftProgramState_Program", "Program").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Program> ProgramReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Program>("TestArchiveModel.FK_MicrosoftProgramState_Program", "Program");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Program>("TestArchiveModel.FK_MicrosoftProgramState_Program", "Program", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_MicrosoftProgramState_Source1", "Source")]
        public Source Source
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("TestArchiveModel.FK_MicrosoftProgramState_Source1", "Source").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("TestArchiveModel.FK_MicrosoftProgramState_Source1", "Source").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Source> SourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("TestArchiveModel.FK_MicrosoftProgramState_Source1", "Source");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Source>("TestArchiveModel.FK_MicrosoftProgramState_Source1", "Source", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_MicrosoftProgramState_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_MicrosoftProgramState_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_MicrosoftProgramState_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_MicrosoftProgramState_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("TestArchiveModel.FK_MicrosoftProgramState_State", "State", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_MicrosoftProgramState_Types", "TypeSource")]
        public TypeSource TypeSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeSource>("TestArchiveModel.FK_MicrosoftProgramState_Types", "TypeSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeSource>("TestArchiveModel.FK_MicrosoftProgramState_Types", "TypeSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TypeSource> TypeSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeSource>("TestArchiveModel.FK_MicrosoftProgramState_Types", "TypeSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TypeSource>("TestArchiveModel.FK_MicrosoftProgramState_Types", "TypeSource", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="Month")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Month : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Month object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="monts">Initial value of the Monts property.</param>
        public static Month CreateMonth(global::System.Int32 id, global::System.String monts)
        {
            Month month = new Month();
            month.Id = id;
            month.Monts = monts;
            return month;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Monts
        {
            get
            {
                return _Monts;
            }
            set
            {
                OnMontsChanging(value);
                ReportPropertyChanging("Monts");
                _Monts = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Monts");
                OnMontsChanged();
            }
        }
        private global::System.String _Monts;
        partial void OnMontsChanging(global::System.String value);
        partial void OnMontsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="Municipality")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Municipality : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Municipality object.
        /// </summary>
        /// <param name="idMunicipality">Initial value of the IdMunicipality property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="mainMunicipality">Initial value of the MainMunicipality property.</param>
        /// <param name="idState">Initial value of the IdState property.</param>
        public static Municipality CreateMunicipality(global::System.Int32 idMunicipality, global::System.String name, global::System.Boolean mainMunicipality, global::System.Int32 idState)
        {
            Municipality municipality = new Municipality();
            municipality.IdMunicipality = idMunicipality;
            municipality.Name = name;
            municipality.MainMunicipality = mainMunicipality;
            municipality.IdState = idState;
            return municipality;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdMunicipality
        {
            get
            {
                return _IdMunicipality;
            }
            set
            {
                if (_IdMunicipality != value)
                {
                    OnIdMunicipalityChanging(value);
                    ReportPropertyChanging("IdMunicipality");
                    _IdMunicipality = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdMunicipality");
                    OnIdMunicipalityChanged();
                }
            }
        }
        private global::System.Int32 _IdMunicipality;
        partial void OnIdMunicipalityChanging(global::System.Int32 value);
        partial void OnIdMunicipalityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Population
        {
            get
            {
                return _Population;
            }
            set
            {
                OnPopulationChanging(value);
                ReportPropertyChanging("Population");
                _Population = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Population");
                OnPopulationChanged();
            }
        }
        private Nullable<global::System.Int64> _Population;
        partial void OnPopulationChanging(Nullable<global::System.Int64> value);
        partial void OnPopulationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean MainMunicipality
        {
            get
            {
                return _MainMunicipality;
            }
            set
            {
                OnMainMunicipalityChanging(value);
                ReportPropertyChanging("MainMunicipality");
                _MainMunicipality = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MainMunicipality");
                OnMainMunicipalityChanged();
            }
        }
        private global::System.Boolean _MainMunicipality;
        partial void OnMainMunicipalityChanging(global::System.Boolean value);
        partial void OnMainMunicipalityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdState
        {
            get
            {
                return _IdState;
            }
            set
            {
                OnIdStateChanging(value);
                ReportPropertyChanging("IdState");
                _IdState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdState");
                OnIdStateChanged();
            }
        }
        private global::System.Int32 _IdState;
        partial void OnIdStateChanging(global::System.Int32 value);
        partial void OnIdStateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Municipality_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_Municipality_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_Municipality_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_Municipality_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("TestArchiveModel.FK_Municipality_State", "State", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Political_Information_Municipality_Municipality", "PoliticalInformationMunicipality")]
        public EntityCollection<PoliticalInformationMunicipality> PoliticalInformationMunicipalities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PoliticalInformationMunicipality>("TestArchiveModel.FK_Political_Information_Municipality_Municipality", "PoliticalInformationMunicipality");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PoliticalInformationMunicipality>("TestArchiveModel.FK_Political_Information_Municipality_Municipality", "PoliticalInformationMunicipality", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="OpenSourceState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OpenSourceState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OpenSourceState object.
        /// </summary>
        /// <param name="idOSSState">Initial value of the IdOSSState property.</param>
        /// <param name="idTypeProduct">Initial value of the IdTypeProduct property.</param>
        /// <param name="idProduct">Initial value of the IdProduct property.</param>
        /// <param name="idPenetration">Initial value of the IdPenetration property.</param>
        /// <param name="idState">Initial value of the IdState property.</param>
        public static OpenSourceState CreateOpenSourceState(global::System.Int32 idOSSState, global::System.Int32 idTypeProduct, global::System.Int32 idProduct, global::System.Int32 idPenetration, global::System.Int32 idState)
        {
            OpenSourceState openSourceState = new OpenSourceState();
            openSourceState.IdOSSState = idOSSState;
            openSourceState.IdTypeProduct = idTypeProduct;
            openSourceState.IdProduct = idProduct;
            openSourceState.IdPenetration = idPenetration;
            openSourceState.IdState = idState;
            return openSourceState;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdOSSState
        {
            get
            {
                return _IdOSSState;
            }
            set
            {
                if (_IdOSSState != value)
                {
                    OnIdOSSStateChanging(value);
                    ReportPropertyChanging("IdOSSState");
                    _IdOSSState = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdOSSState");
                    OnIdOSSStateChanged();
                }
            }
        }
        private global::System.Int32 _IdOSSState;
        partial void OnIdOSSStateChanging(global::System.Int32 value);
        partial void OnIdOSSStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdTypeProduct
        {
            get
            {
                return _IdTypeProduct;
            }
            set
            {
                OnIdTypeProductChanging(value);
                ReportPropertyChanging("IdTypeProduct");
                _IdTypeProduct = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdTypeProduct");
                OnIdTypeProductChanged();
            }
        }
        private global::System.Int32 _IdTypeProduct;
        partial void OnIdTypeProductChanging(global::System.Int32 value);
        partial void OnIdTypeProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdProduct
        {
            get
            {
                return _IdProduct;
            }
            set
            {
                OnIdProductChanging(value);
                ReportPropertyChanging("IdProduct");
                _IdProduct = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdProduct");
                OnIdProductChanged();
            }
        }
        private global::System.Int32 _IdProduct;
        partial void OnIdProductChanging(global::System.Int32 value);
        partial void OnIdProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdPenetration
        {
            get
            {
                return _IdPenetration;
            }
            set
            {
                OnIdPenetrationChanging(value);
                ReportPropertyChanging("IdPenetration");
                _IdPenetration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdPenetration");
                OnIdPenetrationChanged();
            }
        }
        private global::System.Int32 _IdPenetration;
        partial void OnIdPenetrationChanging(global::System.Int32 value);
        partial void OnIdPenetrationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private Nullable<global::System.Int32> _Year;
        partial void OnYearChanging(Nullable<global::System.Int32> value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdState
        {
            get
            {
                return _IdState;
            }
            set
            {
                OnIdStateChanging(value);
                ReportPropertyChanging("IdState");
                _IdState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdState");
                OnIdStateChanged();
            }
        }
        private global::System.Int32 _IdState;
        partial void OnIdStateChanging(global::System.Int32 value);
        partial void OnIdStateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_OpenSourceState_Penetration", "Penetration")]
        public Penetration Penetration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Penetration>("TestArchiveModel.FK_OpenSourceState_Penetration", "Penetration").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Penetration>("TestArchiveModel.FK_OpenSourceState_Penetration", "Penetration").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Penetration> PenetrationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Penetration>("TestArchiveModel.FK_OpenSourceState_Penetration", "Penetration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Penetration>("TestArchiveModel.FK_OpenSourceState_Penetration", "Penetration", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_OpenSourceState_Products", "Products")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("TestArchiveModel.FK_OpenSourceState_Products", "Products").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("TestArchiveModel.FK_OpenSourceState_Products", "Products").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("TestArchiveModel.FK_OpenSourceState_Products", "Products");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("TestArchiveModel.FK_OpenSourceState_Products", "Products", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_OpenSourceState_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_OpenSourceState_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_OpenSourceState_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_OpenSourceState_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("TestArchiveModel.FK_OpenSourceState_State", "State", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_OpenSourceState_TypeProduct", "TypeProduct")]
        public TypeProduct TypeProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeProduct>("TestArchiveModel.FK_OpenSourceState_TypeProduct", "TypeProduct").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeProduct>("TestArchiveModel.FK_OpenSourceState_TypeProduct", "TypeProduct").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TypeProduct> TypeProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeProduct>("TestArchiveModel.FK_OpenSourceState_TypeProduct", "TypeProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TypeProduct>("TestArchiveModel.FK_OpenSourceState_TypeProduct", "TypeProduct", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="OpenSourceStateCommunity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OpenSourceStateCommunity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OpenSourceStateCommunity object.
        /// </summary>
        /// <param name="idOpenSourceCommunityState">Initial value of the IdOpenSourceCommunityState property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="universityRelationship">Initial value of the UniversityRelationship property.</param>
        /// <param name="idContact">Initial value of the IdContact property.</param>
        public static OpenSourceStateCommunity CreateOpenSourceStateCommunity(global::System.Int32 idOpenSourceCommunityState, global::System.String name, global::System.String universityRelationship, global::System.Int32 idContact)
        {
            OpenSourceStateCommunity openSourceStateCommunity = new OpenSourceStateCommunity();
            openSourceStateCommunity.IdOpenSourceCommunityState = idOpenSourceCommunityState;
            openSourceStateCommunity.Name = name;
            openSourceStateCommunity.UniversityRelationship = universityRelationship;
            openSourceStateCommunity.IdContact = idContact;
            return openSourceStateCommunity;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdOpenSourceCommunityState
        {
            get
            {
                return _IdOpenSourceCommunityState;
            }
            set
            {
                if (_IdOpenSourceCommunityState != value)
                {
                    OnIdOpenSourceCommunityStateChanging(value);
                    ReportPropertyChanging("IdOpenSourceCommunityState");
                    _IdOpenSourceCommunityState = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdOpenSourceCommunityState");
                    OnIdOpenSourceCommunityStateChanged();
                }
            }
        }
        private global::System.Int32 _IdOpenSourceCommunityState;
        partial void OnIdOpenSourceCommunityStateChanging(global::System.Int32 value);
        partial void OnIdOpenSourceCommunityStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UniversityRelationship
        {
            get
            {
                return _UniversityRelationship;
            }
            set
            {
                OnUniversityRelationshipChanging(value);
                ReportPropertyChanging("UniversityRelationship");
                _UniversityRelationship = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UniversityRelationship");
                OnUniversityRelationshipChanged();
            }
        }
        private global::System.String _UniversityRelationship;
        partial void OnUniversityRelationshipChanging(global::System.String value);
        partial void OnUniversityRelationshipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IdState
        {
            get
            {
                return _IdState;
            }
            set
            {
                OnIdStateChanging(value);
                ReportPropertyChanging("IdState");
                _IdState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdState");
                OnIdStateChanged();
            }
        }
        private Nullable<global::System.Int32> _IdState;
        partial void OnIdStateChanging(Nullable<global::System.Int32> value);
        partial void OnIdStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdContact
        {
            get
            {
                return _IdContact;
            }
            set
            {
                OnIdContactChanging(value);
                ReportPropertyChanging("IdContact");
                _IdContact = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdContact");
                OnIdContactChanged();
            }
        }
        private global::System.Int32 _IdContact;
        partial void OnIdContactChanging(global::System.Int32 value);
        partial void OnIdContactChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_OpenSourceStateCommunity_Contacts", "Contacts")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("TestArchiveModel.FK_OpenSourceStateCommunity_Contacts", "Contacts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("TestArchiveModel.FK_OpenSourceStateCommunity_Contacts", "Contacts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("TestArchiveModel.FK_OpenSourceStateCommunity_Contacts", "Contacts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("TestArchiveModel.FK_OpenSourceStateCommunity_Contacts", "Contacts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_OpenSourceStateCommunity_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_OpenSourceStateCommunity_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_OpenSourceStateCommunity_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_OpenSourceStateCommunity_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("TestArchiveModel.FK_OpenSourceStateCommunity_State", "State", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="OpenSourceStateProvider")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OpenSourceStateProvider : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OpenSourceStateProvider object.
        /// </summary>
        /// <param name="idOpenSourceStateProvider">Initial value of the IdOpenSourceStateProvider property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="idProduct">Initial value of the IdProduct property.</param>
        /// <param name="invoicing">Initial value of the Invoicing property.</param>
        /// <param name="dateFrom">Initial value of the DateFrom property.</param>
        public static OpenSourceStateProvider CreateOpenSourceStateProvider(global::System.Int32 idOpenSourceStateProvider, global::System.String name, global::System.Int32 idProduct, global::System.Double invoicing, global::System.DateTime dateFrom)
        {
            OpenSourceStateProvider openSourceStateProvider = new OpenSourceStateProvider();
            openSourceStateProvider.IdOpenSourceStateProvider = idOpenSourceStateProvider;
            openSourceStateProvider.Name = name;
            openSourceStateProvider.IdProduct = idProduct;
            openSourceStateProvider.Invoicing = invoicing;
            openSourceStateProvider.DateFrom = dateFrom;
            return openSourceStateProvider;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdOpenSourceStateProvider
        {
            get
            {
                return _IdOpenSourceStateProvider;
            }
            set
            {
                if (_IdOpenSourceStateProvider != value)
                {
                    OnIdOpenSourceStateProviderChanging(value);
                    ReportPropertyChanging("IdOpenSourceStateProvider");
                    _IdOpenSourceStateProvider = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdOpenSourceStateProvider");
                    OnIdOpenSourceStateProviderChanged();
                }
            }
        }
        private global::System.Int32 _IdOpenSourceStateProvider;
        partial void OnIdOpenSourceStateProviderChanging(global::System.Int32 value);
        partial void OnIdOpenSourceStateProviderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdProduct
        {
            get
            {
                return _IdProduct;
            }
            set
            {
                OnIdProductChanging(value);
                ReportPropertyChanging("IdProduct");
                _IdProduct = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdProduct");
                OnIdProductChanged();
            }
        }
        private global::System.Int32 _IdProduct;
        partial void OnIdProductChanging(global::System.Int32 value);
        partial void OnIdProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Invoicing
        {
            get
            {
                return _Invoicing;
            }
            set
            {
                OnInvoicingChanging(value);
                ReportPropertyChanging("Invoicing");
                _Invoicing = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Invoicing");
                OnInvoicingChanged();
            }
        }
        private global::System.Double _Invoicing;
        partial void OnInvoicingChanging(global::System.Double value);
        partial void OnInvoicingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IdState
        {
            get
            {
                return _IdState;
            }
            set
            {
                OnIdStateChanging(value);
                ReportPropertyChanging("IdState");
                _IdState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdState");
                OnIdStateChanged();
            }
        }
        private Nullable<global::System.Int32> _IdState;
        partial void OnIdStateChanging(Nullable<global::System.Int32> value);
        partial void OnIdStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateFrom
        {
            get
            {
                return _DateFrom;
            }
            set
            {
                OnDateFromChanging(value);
                ReportPropertyChanging("DateFrom");
                _DateFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateFrom");
                OnDateFromChanged();
            }
        }
        private global::System.DateTime _DateFrom;
        partial void OnDateFromChanging(global::System.DateTime value);
        partial void OnDateFromChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_OpenSourceStateProvider_Products", "Products")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("TestArchiveModel.FK_OpenSourceStateProvider_Products", "Products").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("TestArchiveModel.FK_OpenSourceStateProvider_Products", "Products").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("TestArchiveModel.FK_OpenSourceStateProvider_Products", "Products");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("TestArchiveModel.FK_OpenSourceStateProvider_Products", "Products", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_OpenSourceStateProvider_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_OpenSourceStateProvider_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_OpenSourceStateProvider_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_OpenSourceStateProvider_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("TestArchiveModel.FK_OpenSourceStateProvider_State", "State", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="Organization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Organization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Organization object.
        /// </summary>
        /// <param name="idOrganization">Initial value of the IdOrganization property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Organization CreateOrganization(global::System.Int32 idOrganization, global::System.String name)
        {
            Organization organization = new Organization();
            organization.IdOrganization = idOrganization;
            organization.Name = name;
            return organization;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdOrganization
        {
            get
            {
                return _IdOrganization;
            }
            set
            {
                if (_IdOrganization != value)
                {
                    OnIdOrganizationChanging(value);
                    ReportPropertyChanging("IdOrganization");
                    _IdOrganization = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdOrganization");
                    OnIdOrganizationChanged();
                }
            }
        }
        private global::System.Int32 _IdOrganization;
        partial void OnIdOrganizationChanging(global::System.Int32 value);
        partial void OnIdOrganizationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="Owner")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Owner : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Owner object.
        /// </summary>
        /// <param name="idOwner">Initial value of the IdOwner property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Owner CreateOwner(global::System.Int32 idOwner, global::System.String name)
        {
            Owner owner = new Owner();
            owner.IdOwner = idOwner;
            owner.Name = name;
            return owner;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdOwner
        {
            get
            {
                return _IdOwner;
            }
            set
            {
                if (_IdOwner != value)
                {
                    OnIdOwnerChanging(value);
                    ReportPropertyChanging("IdOwner");
                    _IdOwner = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdOwner");
                    OnIdOwnerChanged();
                }
            }
        }
        private global::System.Int32 _IdOwner;
        partial void OnIdOwnerChanging(global::System.Int32 value);
        partial void OnIdOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Competition_Owner", "Competition")]
        public EntityCollection<Competition> Competitions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Competition>("TestArchiveModel.FK_Competition_Owner", "Competition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Competition>("TestArchiveModel.FK_Competition_Owner", "Competition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_MicrosoftProgramState_Owner", "MicrosoftProgramState")]
        public EntityCollection<MicrosoftProgramState> MicrosoftProgramStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MicrosoftProgramState>("TestArchiveModel.FK_MicrosoftProgramState_Owner", "MicrosoftProgramState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MicrosoftProgramState>("TestArchiveModel.FK_MicrosoftProgramState_Owner", "MicrosoftProgramState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_StateProgram_Owner", "StateProgram")]
        public EntityCollection<StateProgram> StatePrograms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StateProgram>("TestArchiveModel.FK_StateProgram_Owner", "StateProgram");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StateProgram>("TestArchiveModel.FK_StateProgram_Owner", "StateProgram", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="Partner")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Partner : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Partner object.
        /// </summary>
        /// <param name="idPartner">Initial value of the IdPartner property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Partner CreatePartner(global::System.Int32 idPartner, global::System.String name)
        {
            Partner partner = new Partner();
            partner.IdPartner = idPartner;
            partner.Name = name;
            return partner;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdPartner
        {
            get
            {
                return _IdPartner;
            }
            set
            {
                if (_IdPartner != value)
                {
                    OnIdPartnerChanging(value);
                    ReportPropertyChanging("IdPartner");
                    _IdPartner = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdPartner");
                    OnIdPartnerChanged();
                }
            }
        }
        private global::System.Int32 _IdPartner;
        partial void OnIdPartnerChanging(global::System.Int32 value);
        partial void OnIdPartnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_MicrosoftProgramState_Partner", "MicrosoftProgramState")]
        public EntityCollection<MicrosoftProgramState> MicrosoftProgramStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MicrosoftProgramState>("TestArchiveModel.FK_MicrosoftProgramState_Partner", "MicrosoftProgramState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MicrosoftProgramState>("TestArchiveModel.FK_MicrosoftProgramState_Partner", "MicrosoftProgramState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_StateProgram_Partner", "StateProgram")]
        public EntityCollection<StateProgram> StatePrograms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StateProgram>("TestArchiveModel.FK_StateProgram_Partner", "StateProgram");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StateProgram>("TestArchiveModel.FK_StateProgram_Partner", "StateProgram", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="Penetration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Penetration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Penetration object.
        /// </summary>
        /// <param name="idPenetration">Initial value of the IdPenetration property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Penetration CreatePenetration(global::System.Int32 idPenetration, global::System.String name)
        {
            Penetration penetration = new Penetration();
            penetration.IdPenetration = idPenetration;
            penetration.Name = name;
            return penetration;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdPenetration
        {
            get
            {
                return _IdPenetration;
            }
            set
            {
                if (_IdPenetration != value)
                {
                    OnIdPenetrationChanging(value);
                    ReportPropertyChanging("IdPenetration");
                    _IdPenetration = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdPenetration");
                    OnIdPenetrationChanged();
                }
            }
        }
        private global::System.Int32 _IdPenetration;
        partial void OnIdPenetrationChanging(global::System.Int32 value);
        partial void OnIdPenetrationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_OpenSourceState_Penetration", "OpenSourceState")]
        public EntityCollection<OpenSourceState> OpenSourceStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OpenSourceState>("TestArchiveModel.FK_OpenSourceState_Penetration", "OpenSourceState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OpenSourceState>("TestArchiveModel.FK_OpenSourceState_Penetration", "OpenSourceState", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="PoliticalInformationMunicipality")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PoliticalInformationMunicipality : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PoliticalInformationMunicipality object.
        /// </summary>
        /// <param name="idPoliticalInformationMunicipality">Initial value of the IdPoliticalInformationMunicipality property.</param>
        /// <param name="idPoliticalInformationState">Initial value of the IdPoliticalInformationState property.</param>
        /// <param name="idPoliticalParty">Initial value of the IdPoliticalParty property.</param>
        /// <param name="dateFrom">Initial value of the DateFrom property.</param>
        /// <param name="dateTo">Initial value of the DateTo property.</param>
        /// <param name="idMunicipality">Initial value of the IdMunicipality property.</param>
        public static PoliticalInformationMunicipality CreatePoliticalInformationMunicipality(global::System.Int32 idPoliticalInformationMunicipality, global::System.Int32 idPoliticalInformationState, global::System.Int32 idPoliticalParty, global::System.DateTime dateFrom, global::System.DateTime dateTo, global::System.Int32 idMunicipality)
        {
            PoliticalInformationMunicipality politicalInformationMunicipality = new PoliticalInformationMunicipality();
            politicalInformationMunicipality.IdPoliticalInformationMunicipality = idPoliticalInformationMunicipality;
            politicalInformationMunicipality.IdPoliticalInformationState = idPoliticalInformationState;
            politicalInformationMunicipality.IdPoliticalParty = idPoliticalParty;
            politicalInformationMunicipality.DateFrom = dateFrom;
            politicalInformationMunicipality.DateTo = dateTo;
            politicalInformationMunicipality.IdMunicipality = idMunicipality;
            return politicalInformationMunicipality;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdPoliticalInformationMunicipality
        {
            get
            {
                return _IdPoliticalInformationMunicipality;
            }
            set
            {
                if (_IdPoliticalInformationMunicipality != value)
                {
                    OnIdPoliticalInformationMunicipalityChanging(value);
                    ReportPropertyChanging("IdPoliticalInformationMunicipality");
                    _IdPoliticalInformationMunicipality = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdPoliticalInformationMunicipality");
                    OnIdPoliticalInformationMunicipalityChanged();
                }
            }
        }
        private global::System.Int32 _IdPoliticalInformationMunicipality;
        partial void OnIdPoliticalInformationMunicipalityChanging(global::System.Int32 value);
        partial void OnIdPoliticalInformationMunicipalityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdPoliticalInformationState
        {
            get
            {
                return _IdPoliticalInformationState;
            }
            set
            {
                OnIdPoliticalInformationStateChanging(value);
                ReportPropertyChanging("IdPoliticalInformationState");
                _IdPoliticalInformationState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdPoliticalInformationState");
                OnIdPoliticalInformationStateChanged();
            }
        }
        private global::System.Int32 _IdPoliticalInformationState;
        partial void OnIdPoliticalInformationStateChanging(global::System.Int32 value);
        partial void OnIdPoliticalInformationStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdPoliticalParty
        {
            get
            {
                return _IdPoliticalParty;
            }
            set
            {
                OnIdPoliticalPartyChanging(value);
                ReportPropertyChanging("IdPoliticalParty");
                _IdPoliticalParty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdPoliticalParty");
                OnIdPoliticalPartyChanged();
            }
        }
        private global::System.Int32 _IdPoliticalParty;
        partial void OnIdPoliticalPartyChanging(global::System.Int32 value);
        partial void OnIdPoliticalPartyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateFrom
        {
            get
            {
                return _DateFrom;
            }
            set
            {
                OnDateFromChanging(value);
                ReportPropertyChanging("DateFrom");
                _DateFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateFrom");
                OnDateFromChanged();
            }
        }
        private global::System.DateTime _DateFrom;
        partial void OnDateFromChanging(global::System.DateTime value);
        partial void OnDateFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTo
        {
            get
            {
                return _DateTo;
            }
            set
            {
                OnDateToChanging(value);
                ReportPropertyChanging("DateTo");
                _DateTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTo");
                OnDateToChanged();
            }
        }
        private global::System.DateTime _DateTo;
        partial void OnDateToChanging(global::System.DateTime value);
        partial void OnDateToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Observations
        {
            get
            {
                return _Observations;
            }
            set
            {
                OnObservationsChanging(value);
                ReportPropertyChanging("Observations");
                _Observations = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Observations");
                OnObservationsChanged();
            }
        }
        private global::System.String _Observations;
        partial void OnObservationsChanging(global::System.String value);
        partial void OnObservationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DevelopmentPlan
        {
            get
            {
                return _DevelopmentPlan;
            }
            set
            {
                OnDevelopmentPlanChanging(value);
                ReportPropertyChanging("DevelopmentPlan");
                _DevelopmentPlan = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DevelopmentPlan");
                OnDevelopmentPlanChanged();
            }
        }
        private global::System.String _DevelopmentPlan;
        partial void OnDevelopmentPlanChanging(global::System.String value);
        partial void OnDevelopmentPlanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sectorials
        {
            get
            {
                return _Sectorials;
            }
            set
            {
                OnSectorialsChanging(value);
                ReportPropertyChanging("Sectorials");
                _Sectorials = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sectorials");
                OnSectorialsChanged();
            }
        }
        private global::System.String _Sectorials;
        partial void OnSectorialsChanging(global::System.String value);
        partial void OnSectorialsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdMunicipality
        {
            get
            {
                return _IdMunicipality;
            }
            set
            {
                OnIdMunicipalityChanging(value);
                ReportPropertyChanging("IdMunicipality");
                _IdMunicipality = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdMunicipality");
                OnIdMunicipalityChanged();
            }
        }
        private global::System.Int32 _IdMunicipality;
        partial void OnIdMunicipalityChanging(global::System.Int32 value);
        partial void OnIdMunicipalityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Political_Information_Municipality_Municipality", "Municipality")]
        public Municipality Municipality
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Municipality>("TestArchiveModel.FK_Political_Information_Municipality_Municipality", "Municipality").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Municipality>("TestArchiveModel.FK_Political_Information_Municipality_Municipality", "Municipality").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Municipality> MunicipalityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Municipality>("TestArchiveModel.FK_Political_Information_Municipality_Municipality", "Municipality");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Municipality>("TestArchiveModel.FK_Political_Information_Municipality_Municipality", "Municipality", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Political_Information_Municipality_Political_Party", "PoliticalParty")]
        public PoliticalParty PoliticalParty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PoliticalParty>("TestArchiveModel.FK_Political_Information_Municipality_Political_Party", "PoliticalParty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PoliticalParty>("TestArchiveModel.FK_Political_Information_Municipality_Political_Party", "PoliticalParty").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PoliticalParty> PoliticalPartyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PoliticalParty>("TestArchiveModel.FK_Political_Information_Municipality_Political_Party", "PoliticalParty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PoliticalParty>("TestArchiveModel.FK_Political_Information_Municipality_Political_Party", "PoliticalParty", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="PoliticalInformationState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PoliticalInformationState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PoliticalInformationState object.
        /// </summary>
        /// <param name="idPoliticalInformationState">Initial value of the IdPoliticalInformationState property.</param>
        /// <param name="idPoliticalParty">Initial value of the IdPoliticalParty property.</param>
        /// <param name="dateFrom">Initial value of the DateFrom property.</param>
        /// <param name="dateTo">Initial value of the DateTo property.</param>
        /// <param name="idState">Initial value of the IdState property.</param>
        public static PoliticalInformationState CreatePoliticalInformationState(global::System.Int32 idPoliticalInformationState, global::System.Int32 idPoliticalParty, global::System.DateTime dateFrom, global::System.DateTime dateTo, global::System.Int32 idState)
        {
            PoliticalInformationState politicalInformationState = new PoliticalInformationState();
            politicalInformationState.IdPoliticalInformationState = idPoliticalInformationState;
            politicalInformationState.IdPoliticalParty = idPoliticalParty;
            politicalInformationState.DateFrom = dateFrom;
            politicalInformationState.DateTo = dateTo;
            politicalInformationState.IdState = idState;
            return politicalInformationState;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdPoliticalInformationState
        {
            get
            {
                return _IdPoliticalInformationState;
            }
            set
            {
                if (_IdPoliticalInformationState != value)
                {
                    OnIdPoliticalInformationStateChanging(value);
                    ReportPropertyChanging("IdPoliticalInformationState");
                    _IdPoliticalInformationState = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdPoliticalInformationState");
                    OnIdPoliticalInformationStateChanged();
                }
            }
        }
        private global::System.Int32 _IdPoliticalInformationState;
        partial void OnIdPoliticalInformationStateChanging(global::System.Int32 value);
        partial void OnIdPoliticalInformationStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdPoliticalParty
        {
            get
            {
                return _IdPoliticalParty;
            }
            set
            {
                OnIdPoliticalPartyChanging(value);
                ReportPropertyChanging("IdPoliticalParty");
                _IdPoliticalParty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdPoliticalParty");
                OnIdPoliticalPartyChanged();
            }
        }
        private global::System.Int32 _IdPoliticalParty;
        partial void OnIdPoliticalPartyChanging(global::System.Int32 value);
        partial void OnIdPoliticalPartyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateFrom
        {
            get
            {
                return _DateFrom;
            }
            set
            {
                OnDateFromChanging(value);
                ReportPropertyChanging("DateFrom");
                _DateFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateFrom");
                OnDateFromChanged();
            }
        }
        private global::System.DateTime _DateFrom;
        partial void OnDateFromChanging(global::System.DateTime value);
        partial void OnDateFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTo
        {
            get
            {
                return _DateTo;
            }
            set
            {
                OnDateToChanging(value);
                ReportPropertyChanging("DateTo");
                _DateTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTo");
                OnDateToChanged();
            }
        }
        private global::System.DateTime _DateTo;
        partial void OnDateToChanging(global::System.DateTime value);
        partial void OnDateToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DevelopmentPlan
        {
            get
            {
                return _DevelopmentPlan;
            }
            set
            {
                OnDevelopmentPlanChanging(value);
                ReportPropertyChanging("DevelopmentPlan");
                _DevelopmentPlan = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DevelopmentPlan");
                OnDevelopmentPlanChanged();
            }
        }
        private global::System.String _DevelopmentPlan;
        partial void OnDevelopmentPlanChanging(global::System.String value);
        partial void OnDevelopmentPlanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Observations
        {
            get
            {
                return _Observations;
            }
            set
            {
                OnObservationsChanging(value);
                ReportPropertyChanging("Observations");
                _Observations = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Observations");
                OnObservationsChanged();
            }
        }
        private global::System.String _Observations;
        partial void OnObservationsChanging(global::System.String value);
        partial void OnObservationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sectorials
        {
            get
            {
                return _Sectorials;
            }
            set
            {
                OnSectorialsChanging(value);
                ReportPropertyChanging("Sectorials");
                _Sectorials = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sectorials");
                OnSectorialsChanged();
            }
        }
        private global::System.String _Sectorials;
        partial void OnSectorialsChanging(global::System.String value);
        partial void OnSectorialsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdState
        {
            get
            {
                return _IdState;
            }
            set
            {
                OnIdStateChanging(value);
                ReportPropertyChanging("IdState");
                _IdState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdState");
                OnIdStateChanged();
            }
        }
        private global::System.Int32 _IdState;
        partial void OnIdStateChanging(global::System.Int32 value);
        partial void OnIdStateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Political_Information_State_Political_Party", "PoliticalParty")]
        public PoliticalParty PoliticalParty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PoliticalParty>("TestArchiveModel.FK_Political_Information_State_Political_Party", "PoliticalParty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PoliticalParty>("TestArchiveModel.FK_Political_Information_State_Political_Party", "PoliticalParty").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PoliticalParty> PoliticalPartyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PoliticalParty>("TestArchiveModel.FK_Political_Information_State_Political_Party", "PoliticalParty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PoliticalParty>("TestArchiveModel.FK_Political_Information_State_Political_Party", "PoliticalParty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Political_Information_State_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_Political_Information_State_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_Political_Information_State_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_Political_Information_State_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("TestArchiveModel.FK_Political_Information_State_State", "State", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_PoliticalInformationStateFiles_PoliticalInformationState", "PoliticalInformationStateFiles")]
        public EntityCollection<PoliticalInformationStateFile> PoliticalInformationStateFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PoliticalInformationStateFile>("TestArchiveModel.FK_PoliticalInformationStateFiles_PoliticalInformationState", "PoliticalInformationStateFiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PoliticalInformationStateFile>("TestArchiveModel.FK_PoliticalInformationStateFiles_PoliticalInformationState", "PoliticalInformationStateFiles", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="PoliticalInformationStateFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PoliticalInformationStateFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PoliticalInformationStateFile object.
        /// </summary>
        /// <param name="idFilePoliticalStateInformation">Initial value of the IdFilePoliticalStateInformation property.</param>
        /// <param name="idPoliticalInformationState">Initial value of the IdPoliticalInformationState property.</param>
        /// <param name="fileData">Initial value of the FileData property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        /// <param name="rowGuid">Initial value of the RowGuid property.</param>
        public static PoliticalInformationStateFile CreatePoliticalInformationStateFile(global::System.Int32 idFilePoliticalStateInformation, global::System.Int32 idPoliticalInformationState, global::System.Byte[] fileData, global::System.String fileName, global::System.Guid rowGuid)
        {
            PoliticalInformationStateFile politicalInformationStateFile = new PoliticalInformationStateFile();
            politicalInformationStateFile.IdFilePoliticalStateInformation = idFilePoliticalStateInformation;
            politicalInformationStateFile.IdPoliticalInformationState = idPoliticalInformationState;
            politicalInformationStateFile.FileData = fileData;
            politicalInformationStateFile.FileName = fileName;
            politicalInformationStateFile.RowGuid = rowGuid;
            return politicalInformationStateFile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdFilePoliticalStateInformation
        {
            get
            {
                return _IdFilePoliticalStateInformation;
            }
            set
            {
                if (_IdFilePoliticalStateInformation != value)
                {
                    OnIdFilePoliticalStateInformationChanging(value);
                    ReportPropertyChanging("IdFilePoliticalStateInformation");
                    _IdFilePoliticalStateInformation = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdFilePoliticalStateInformation");
                    OnIdFilePoliticalStateInformationChanged();
                }
            }
        }
        private global::System.Int32 _IdFilePoliticalStateInformation;
        partial void OnIdFilePoliticalStateInformationChanging(global::System.Int32 value);
        partial void OnIdFilePoliticalStateInformationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdPoliticalInformationState
        {
            get
            {
                return _IdPoliticalInformationState;
            }
            set
            {
                OnIdPoliticalInformationStateChanging(value);
                ReportPropertyChanging("IdPoliticalInformationState");
                _IdPoliticalInformationState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdPoliticalInformationState");
                OnIdPoliticalInformationStateChanged();
            }
        }
        private global::System.Int32 _IdPoliticalInformationState;
        partial void OnIdPoliticalInformationStateChanging(global::System.Int32 value);
        partial void OnIdPoliticalInformationStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] FileData
        {
            get
            {
                return StructuralObject.GetValidValue(_FileData);
            }
            set
            {
                OnFileDataChanging(value);
                ReportPropertyChanging("FileData");
                _FileData = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileData");
                OnFileDataChanged();
            }
        }
        private global::System.Byte[] _FileData;
        partial void OnFileDataChanging(global::System.Byte[] value);
        partial void OnFileDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RowGuid
        {
            get
            {
                return _RowGuid;
            }
            set
            {
                OnRowGuidChanging(value);
                ReportPropertyChanging("RowGuid");
                _RowGuid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RowGuid");
                OnRowGuidChanged();
            }
        }
        private global::System.Guid _RowGuid;
        partial void OnRowGuidChanging(global::System.Guid value);
        partial void OnRowGuidChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_PoliticalInformationStateFiles_PoliticalInformationState", "PoliticalInformationState")]
        public PoliticalInformationState PoliticalInformationState
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PoliticalInformationState>("TestArchiveModel.FK_PoliticalInformationStateFiles_PoliticalInformationState", "PoliticalInformationState").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PoliticalInformationState>("TestArchiveModel.FK_PoliticalInformationStateFiles_PoliticalInformationState", "PoliticalInformationState").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PoliticalInformationState> PoliticalInformationStateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PoliticalInformationState>("TestArchiveModel.FK_PoliticalInformationStateFiles_PoliticalInformationState", "PoliticalInformationState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PoliticalInformationState>("TestArchiveModel.FK_PoliticalInformationStateFiles_PoliticalInformationState", "PoliticalInformationState", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="PoliticalParty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PoliticalParty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PoliticalParty object.
        /// </summary>
        /// <param name="idPoliticalParty">Initial value of the IdPoliticalParty property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="shortName">Initial value of the ShortName property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static PoliticalParty CreatePoliticalParty(global::System.Int32 idPoliticalParty, global::System.String name, global::System.String shortName, global::System.Boolean status)
        {
            PoliticalParty politicalParty = new PoliticalParty();
            politicalParty.IdPoliticalParty = idPoliticalParty;
            politicalParty.Name = name;
            politicalParty.ShortName = shortName;
            politicalParty.Status = status;
            return politicalParty;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdPoliticalParty
        {
            get
            {
                return _IdPoliticalParty;
            }
            set
            {
                if (_IdPoliticalParty != value)
                {
                    OnIdPoliticalPartyChanging(value);
                    ReportPropertyChanging("IdPoliticalParty");
                    _IdPoliticalParty = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdPoliticalParty");
                    OnIdPoliticalPartyChanged();
                }
            }
        }
        private global::System.Int32 _IdPoliticalParty;
        partial void OnIdPoliticalPartyChanging(global::System.Int32 value);
        partial void OnIdPoliticalPartyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ColorIndex
        {
            get
            {
                return _ColorIndex;
            }
            set
            {
                OnColorIndexChanging(value);
                ReportPropertyChanging("ColorIndex");
                _ColorIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ColorIndex");
                OnColorIndexChanged();
            }
        }
        private Nullable<global::System.Int32> _ColorIndex;
        partial void OnColorIndexChanging(Nullable<global::System.Int32> value);
        partial void OnColorIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Boolean _Status;
        partial void OnStatusChanging(global::System.Boolean value);
        partial void OnStatusChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Political_Information_Municipality_Political_Party", "PoliticalInformationMunicipality")]
        public EntityCollection<PoliticalInformationMunicipality> PoliticalInformationMunicipalities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PoliticalInformationMunicipality>("TestArchiveModel.FK_Political_Information_Municipality_Political_Party", "PoliticalInformationMunicipality");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PoliticalInformationMunicipality>("TestArchiveModel.FK_Political_Information_Municipality_Political_Party", "PoliticalInformationMunicipality", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Political_Information_State_Political_Party", "PoliticalInformationState")]
        public EntityCollection<PoliticalInformationState> PoliticalInformationStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PoliticalInformationState>("TestArchiveModel.FK_Political_Information_State_Political_Party", "PoliticalInformationState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PoliticalInformationState>("TestArchiveModel.FK_Political_Information_State_Political_Party", "PoliticalInformationState", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="PopulationAttended")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PopulationAttended : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PopulationAttended object.
        /// </summary>
        /// <param name="idPopulationAttended">Initial value of the IdPopulationAttended property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static PopulationAttended CreatePopulationAttended(global::System.Int32 idPopulationAttended, global::System.String name)
        {
            PopulationAttended populationAttended = new PopulationAttended();
            populationAttended.IdPopulationAttended = idPopulationAttended;
            populationAttended.Name = name;
            return populationAttended;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdPopulationAttended
        {
            get
            {
                return _IdPopulationAttended;
            }
            set
            {
                if (_IdPopulationAttended != value)
                {
                    OnIdPopulationAttendedChanging(value);
                    ReportPropertyChanging("IdPopulationAttended");
                    _IdPopulationAttended = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdPopulationAttended");
                    OnIdPopulationAttendedChanged();
                }
            }
        }
        private global::System.Int32 _IdPopulationAttended;
        partial void OnIdPopulationAttendedChanging(global::System.Int32 value);
        partial void OnIdPopulationAttendedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_CapacitationCenter_PopulationAttended", "CapacitationCenter")]
        public EntityCollection<CapacitationCenter> CapacitationCenters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CapacitationCenter>("TestArchiveModel.FK_CapacitationCenter_PopulationAttended", "CapacitationCenter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CapacitationCenter>("TestArchiveModel.FK_CapacitationCenter_PopulationAttended", "CapacitationCenter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Capacitation_Center_Information_PopulationAttended", "CapacitationCenterInformation")]
        public EntityCollection<CapacitationCenterInformation> CapacitationCenterInformations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CapacitationCenterInformation>("TestArchiveModel.FK_Capacitation_Center_Information_PopulationAttended", "CapacitationCenterInformation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CapacitationCenterInformation>("TestArchiveModel.FK_Capacitation_Center_Information_PopulationAttended", "CapacitationCenterInformation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Social_Organization_Information_PopulationAttended", "SocialOrganizationInformation")]
        public EntityCollection<SocialOrganizationInformation> SocialOrganizationInformations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SocialOrganizationInformation>("TestArchiveModel.FK_Social_Organization_Information_PopulationAttended", "SocialOrganizationInformation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SocialOrganizationInformation>("TestArchiveModel.FK_Social_Organization_Information_PopulationAttended", "SocialOrganizationInformation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="idProduct">Initial value of the IdProduct property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="idTypeProduct">Initial value of the IdTypeProduct property.</param>
        /// <param name="openSource">Initial value of the OpenSource property.</param>
        public static Product CreateProduct(global::System.Int32 idProduct, global::System.String name, global::System.Int32 idTypeProduct, global::System.Boolean openSource)
        {
            Product product = new Product();
            product.IdProduct = idProduct;
            product.Name = name;
            product.IdTypeProduct = idTypeProduct;
            product.OpenSource = openSource;
            return product;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdProduct
        {
            get
            {
                return _IdProduct;
            }
            set
            {
                if (_IdProduct != value)
                {
                    OnIdProductChanging(value);
                    ReportPropertyChanging("IdProduct");
                    _IdProduct = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdProduct");
                    OnIdProductChanged();
                }
            }
        }
        private global::System.Int32 _IdProduct;
        partial void OnIdProductChanging(global::System.Int32 value);
        partial void OnIdProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdTypeProduct
        {
            get
            {
                return _IdTypeProduct;
            }
            set
            {
                OnIdTypeProductChanging(value);
                ReportPropertyChanging("IdTypeProduct");
                _IdTypeProduct = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdTypeProduct");
                OnIdTypeProductChanged();
            }
        }
        private global::System.Int32 _IdTypeProduct;
        partial void OnIdTypeProductChanging(global::System.Int32 value);
        partial void OnIdTypeProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean OpenSource
        {
            get
            {
                return _OpenSource;
            }
            set
            {
                OnOpenSourceChanging(value);
                ReportPropertyChanging("OpenSource");
                _OpenSource = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpenSource");
                OnOpenSourceChanged();
            }
        }
        private global::System.Boolean _OpenSource;
        partial void OnOpenSourceChanging(global::System.Boolean value);
        partial void OnOpenSourceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_OpenSourceState_Products", "OpenSourceState")]
        public EntityCollection<OpenSourceState> OpenSourceStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OpenSourceState>("TestArchiveModel.FK_OpenSourceState_Products", "OpenSourceState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OpenSourceState>("TestArchiveModel.FK_OpenSourceState_Products", "OpenSourceState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_OpenSourceStateProvider_Products", "OpenSourceStateProvider")]
        public EntityCollection<OpenSourceStateProvider> OpenSourceStateProviders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OpenSourceStateProvider>("TestArchiveModel.FK_OpenSourceStateProvider_Products", "OpenSourceStateProvider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OpenSourceStateProvider>("TestArchiveModel.FK_OpenSourceStateProvider_Products", "OpenSourceStateProvider", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Products_TypeProduct", "TypeProduct")]
        public TypeProduct TypeProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeProduct>("TestArchiveModel.FK_Products_TypeProduct", "TypeProduct").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeProduct>("TestArchiveModel.FK_Products_TypeProduct", "TypeProduct").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TypeProduct> TypeProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeProduct>("TestArchiveModel.FK_Products_TypeProduct", "TypeProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TypeProduct>("TestArchiveModel.FK_Products_TypeProduct", "TypeProduct", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="Program")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Program : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Program object.
        /// </summary>
        /// <param name="idProgram">Initial value of the IdProgram property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Program CreateProgram(global::System.Int32 idProgram, global::System.String name)
        {
            Program program = new Program();
            program.IdProgram = idProgram;
            program.Name = name;
            return program;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdProgram
        {
            get
            {
                return _IdProgram;
            }
            set
            {
                if (_IdProgram != value)
                {
                    OnIdProgramChanging(value);
                    ReportPropertyChanging("IdProgram");
                    _IdProgram = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdProgram");
                    OnIdProgramChanged();
                }
            }
        }
        private global::System.Int32 _IdProgram;
        partial void OnIdProgramChanging(global::System.Int32 value);
        partial void OnIdProgramChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_MicrosoftProgramState_Program", "MicrosoftProgramState")]
        public EntityCollection<MicrosoftProgramState> MicrosoftProgramStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MicrosoftProgramState>("TestArchiveModel.FK_MicrosoftProgramState_Program", "MicrosoftProgramState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MicrosoftProgramState>("TestArchiveModel.FK_MicrosoftProgramState_Program", "MicrosoftProgramState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_StateProgram_Program", "StateProgram")]
        public EntityCollection<StateProgram> StatePrograms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StateProgram>("TestArchiveModel.FK_StateProgram_Program", "StateProgram");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StateProgram>("TestArchiveModel.FK_StateProgram_Program", "StateProgram", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="SchoolGrade")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SchoolGrade : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SchoolGrade object.
        /// </summary>
        /// <param name="idSchoolGrade">Initial value of the IdSchoolGrade property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SchoolGrade CreateSchoolGrade(global::System.Int32 idSchoolGrade, global::System.String name)
        {
            SchoolGrade schoolGrade = new SchoolGrade();
            schoolGrade.IdSchoolGrade = idSchoolGrade;
            schoolGrade.Name = name;
            return schoolGrade;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdSchoolGrade
        {
            get
            {
                return _IdSchoolGrade;
            }
            set
            {
                if (_IdSchoolGrade != value)
                {
                    OnIdSchoolGradeChanging(value);
                    ReportPropertyChanging("IdSchoolGrade");
                    _IdSchoolGrade = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdSchoolGrade");
                    OnIdSchoolGradeChanged();
                }
            }
        }
        private global::System.Int32 _IdSchoolGrade;
        partial void OnIdSchoolGradeChanging(global::System.Int32 value);
        partial void OnIdSchoolGradeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_EnlaceTest_SchoolGrade", "EnlaceTest")]
        public EntityCollection<EnlaceTest> EnlaceTests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EnlaceTest>("TestArchiveModel.FK_EnlaceTest_SchoolGrade", "EnlaceTest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EnlaceTest>("TestArchiveModel.FK_EnlaceTest_SchoolGrade", "EnlaceTest", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="SchoolLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SchoolLevel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SchoolLevel object.
        /// </summary>
        /// <param name="idSchoolLevel">Initial value of the IdSchoolLevel property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SchoolLevel CreateSchoolLevel(global::System.Int32 idSchoolLevel, global::System.String name)
        {
            SchoolLevel schoolLevel = new SchoolLevel();
            schoolLevel.IdSchoolLevel = idSchoolLevel;
            schoolLevel.Name = name;
            return schoolLevel;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdSchoolLevel
        {
            get
            {
                return _IdSchoolLevel;
            }
            set
            {
                if (_IdSchoolLevel != value)
                {
                    OnIdSchoolLevelChanging(value);
                    ReportPropertyChanging("IdSchoolLevel");
                    _IdSchoolLevel = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdSchoolLevel");
                    OnIdSchoolLevelChanged();
                }
            }
        }
        private global::System.Int32 _IdSchoolLevel;
        partial void OnIdSchoolLevelChanging(global::System.Int32 value);
        partial void OnIdSchoolLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Schools_Information_School_Level", "SchoolsInformation")]
        public EntityCollection<SchoolsInformation> SchoolsInformations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SchoolsInformation>("TestArchiveModel.FK_Schools_Information_School_Level", "SchoolsInformation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SchoolsInformation>("TestArchiveModel.FK_Schools_Information_School_Level", "SchoolsInformation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Students_Information_School_Level", "StudentsInformation")]
        public EntityCollection<StudentsInformation> StudentsInformations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StudentsInformation>("TestArchiveModel.FK_Students_Information_School_Level", "StudentsInformation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StudentsInformation>("TestArchiveModel.FK_Students_Information_School_Level", "StudentsInformation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Teachers_Information_School_Level", "TeachersInformation")]
        public EntityCollection<TeachersInformation> TeachersInformations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeachersInformation>("TestArchiveModel.FK_Teachers_Information_School_Level", "TeachersInformation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeachersInformation>("TestArchiveModel.FK_Teachers_Information_School_Level", "TeachersInformation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="SchoolsInformation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SchoolsInformation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SchoolsInformation object.
        /// </summary>
        /// <param name="idSchoolInformation">Initial value of the IdSchoolInformation property.</param>
        /// <param name="idEducationInformationState">Initial value of the IdEducationInformationState property.</param>
        /// <param name="idSchoolLevel">Initial value of the IdSchoolLevel property.</param>
        /// <param name="idSchoolType">Initial value of the IdSchoolType property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        public static SchoolsInformation CreateSchoolsInformation(global::System.Int32 idSchoolInformation, global::System.Int32 idEducationInformationState, global::System.Int32 idSchoolLevel, global::System.Int32 idSchoolType, global::System.Int32 number)
        {
            SchoolsInformation schoolsInformation = new SchoolsInformation();
            schoolsInformation.IdSchoolInformation = idSchoolInformation;
            schoolsInformation.IdEducationInformationState = idEducationInformationState;
            schoolsInformation.IdSchoolLevel = idSchoolLevel;
            schoolsInformation.IdSchoolType = idSchoolType;
            schoolsInformation.Number = number;
            return schoolsInformation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdSchoolInformation
        {
            get
            {
                return _IdSchoolInformation;
            }
            set
            {
                if (_IdSchoolInformation != value)
                {
                    OnIdSchoolInformationChanging(value);
                    ReportPropertyChanging("IdSchoolInformation");
                    _IdSchoolInformation = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdSchoolInformation");
                    OnIdSchoolInformationChanged();
                }
            }
        }
        private global::System.Int32 _IdSchoolInformation;
        partial void OnIdSchoolInformationChanging(global::System.Int32 value);
        partial void OnIdSchoolInformationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdEducationInformationState
        {
            get
            {
                return _IdEducationInformationState;
            }
            set
            {
                OnIdEducationInformationStateChanging(value);
                ReportPropertyChanging("IdEducationInformationState");
                _IdEducationInformationState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdEducationInformationState");
                OnIdEducationInformationStateChanged();
            }
        }
        private global::System.Int32 _IdEducationInformationState;
        partial void OnIdEducationInformationStateChanging(global::System.Int32 value);
        partial void OnIdEducationInformationStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdSchoolLevel
        {
            get
            {
                return _IdSchoolLevel;
            }
            set
            {
                OnIdSchoolLevelChanging(value);
                ReportPropertyChanging("IdSchoolLevel");
                _IdSchoolLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdSchoolLevel");
                OnIdSchoolLevelChanged();
            }
        }
        private global::System.Int32 _IdSchoolLevel;
        partial void OnIdSchoolLevelChanging(global::System.Int32 value);
        partial void OnIdSchoolLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdSchoolType
        {
            get
            {
                return _IdSchoolType;
            }
            set
            {
                OnIdSchoolTypeChanging(value);
                ReportPropertyChanging("IdSchoolType");
                _IdSchoolType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdSchoolType");
                OnIdSchoolTypeChanged();
            }
        }
        private global::System.Int32 _IdSchoolType;
        partial void OnIdSchoolTypeChanging(global::System.Int32 value);
        partial void OnIdSchoolTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Schools_Information_Education_Information_State", "EducationInformationState")]
        public EducationInformationState EducationInformationState
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationInformationState>("TestArchiveModel.FK_Schools_Information_Education_Information_State", "EducationInformationState").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationInformationState>("TestArchiveModel.FK_Schools_Information_Education_Information_State", "EducationInformationState").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EducationInformationState> EducationInformationStateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationInformationState>("TestArchiveModel.FK_Schools_Information_Education_Information_State", "EducationInformationState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EducationInformationState>("TestArchiveModel.FK_Schools_Information_Education_Information_State", "EducationInformationState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Schools_Information_School_Level", "SchoolLevel")]
        public SchoolLevel SchoolLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolLevel>("TestArchiveModel.FK_Schools_Information_School_Level", "SchoolLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolLevel>("TestArchiveModel.FK_Schools_Information_School_Level", "SchoolLevel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SchoolLevel> SchoolLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolLevel>("TestArchiveModel.FK_Schools_Information_School_Level", "SchoolLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SchoolLevel>("TestArchiveModel.FK_Schools_Information_School_Level", "SchoolLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Schools_Information_School_Type", "SchoolType")]
        public SchoolType SchoolType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolType>("TestArchiveModel.FK_Schools_Information_School_Type", "SchoolType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolType>("TestArchiveModel.FK_Schools_Information_School_Type", "SchoolType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SchoolType> SchoolTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolType>("TestArchiveModel.FK_Schools_Information_School_Type", "SchoolType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SchoolType>("TestArchiveModel.FK_Schools_Information_School_Type", "SchoolType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="SchoolType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SchoolType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SchoolType object.
        /// </summary>
        /// <param name="idSchoolType">Initial value of the IdSchoolType property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SchoolType CreateSchoolType(global::System.Int32 idSchoolType, global::System.String name)
        {
            SchoolType schoolType = new SchoolType();
            schoolType.IdSchoolType = idSchoolType;
            schoolType.Name = name;
            return schoolType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdSchoolType
        {
            get
            {
                return _IdSchoolType;
            }
            set
            {
                if (_IdSchoolType != value)
                {
                    OnIdSchoolTypeChanging(value);
                    ReportPropertyChanging("IdSchoolType");
                    _IdSchoolType = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdSchoolType");
                    OnIdSchoolTypeChanged();
                }
            }
        }
        private global::System.Int32 _IdSchoolType;
        partial void OnIdSchoolTypeChanging(global::System.Int32 value);
        partial void OnIdSchoolTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Schools_Information_School_Type", "SchoolsInformation")]
        public EntityCollection<SchoolsInformation> SchoolsInformations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SchoolsInformation>("TestArchiveModel.FK_Schools_Information_School_Type", "SchoolsInformation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SchoolsInformation>("TestArchiveModel.FK_Schools_Information_School_Type", "SchoolsInformation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Students_Information_School_Type", "StudentsInformation")]
        public EntityCollection<StudentsInformation> StudentsInformations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StudentsInformation>("TestArchiveModel.FK_Students_Information_School_Type", "StudentsInformation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StudentsInformation>("TestArchiveModel.FK_Students_Information_School_Type", "StudentsInformation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Teachers_Information_School_Type", "TeachersInformation")]
        public EntityCollection<TeachersInformation> TeachersInformations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeachersInformation>("TestArchiveModel.FK_Teachers_Information_School_Type", "TeachersInformation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeachersInformation>("TestArchiveModel.FK_Teachers_Information_School_Type", "TeachersInformation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="SEPProjectState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SEPProjectState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SEPProjectState object.
        /// </summary>
        /// <param name="idSepProjectState">Initial value of the IdSepProjectState property.</param>
        /// <param name="idEducationInformationState">Initial value of the IdEducationInformationState property.</param>
        /// <param name="idTypeSepProject">Initial value of the IdTypeSepProject property.</param>
        /// <param name="percentage">Initial value of the Percentage property.</param>
        public static SEPProjectState CreateSEPProjectState(global::System.Int32 idSepProjectState, global::System.Int32 idEducationInformationState, global::System.Int32 idTypeSepProject, global::System.Int64 percentage)
        {
            SEPProjectState sEPProjectState = new SEPProjectState();
            sEPProjectState.IdSepProjectState = idSepProjectState;
            sEPProjectState.IdEducationInformationState = idEducationInformationState;
            sEPProjectState.IdTypeSepProject = idTypeSepProject;
            sEPProjectState.Percentage = percentage;
            return sEPProjectState;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdSepProjectState
        {
            get
            {
                return _IdSepProjectState;
            }
            set
            {
                if (_IdSepProjectState != value)
                {
                    OnIdSepProjectStateChanging(value);
                    ReportPropertyChanging("IdSepProjectState");
                    _IdSepProjectState = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdSepProjectState");
                    OnIdSepProjectStateChanged();
                }
            }
        }
        private global::System.Int32 _IdSepProjectState;
        partial void OnIdSepProjectStateChanging(global::System.Int32 value);
        partial void OnIdSepProjectStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdEducationInformationState
        {
            get
            {
                return _IdEducationInformationState;
            }
            set
            {
                OnIdEducationInformationStateChanging(value);
                ReportPropertyChanging("IdEducationInformationState");
                _IdEducationInformationState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdEducationInformationState");
                OnIdEducationInformationStateChanged();
            }
        }
        private global::System.Int32 _IdEducationInformationState;
        partial void OnIdEducationInformationStateChanging(global::System.Int32 value);
        partial void OnIdEducationInformationStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdTypeSepProject
        {
            get
            {
                return _IdTypeSepProject;
            }
            set
            {
                OnIdTypeSepProjectChanging(value);
                ReportPropertyChanging("IdTypeSepProject");
                _IdTypeSepProject = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdTypeSepProject");
                OnIdTypeSepProjectChanged();
            }
        }
        private global::System.Int32 _IdTypeSepProject;
        partial void OnIdTypeSepProjectChanging(global::System.Int32 value);
        partial void OnIdTypeSepProjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Percentage
        {
            get
            {
                return _Percentage;
            }
            set
            {
                OnPercentageChanging(value);
                ReportPropertyChanging("Percentage");
                _Percentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentage");
                OnPercentageChanged();
            }
        }
        private global::System.Int64 _Percentage;
        partial void OnPercentageChanging(global::System.Int64 value);
        partial void OnPercentageChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_SEP_Project_State_Education_Information_State", "EducationInformationState")]
        public EducationInformationState EducationInformationState
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationInformationState>("TestArchiveModel.FK_SEP_Project_State_Education_Information_State", "EducationInformationState").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationInformationState>("TestArchiveModel.FK_SEP_Project_State_Education_Information_State", "EducationInformationState").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EducationInformationState> EducationInformationStateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationInformationState>("TestArchiveModel.FK_SEP_Project_State_Education_Information_State", "EducationInformationState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EducationInformationState>("TestArchiveModel.FK_SEP_Project_State_Education_Information_State", "EducationInformationState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_SEPProjectState_TypeSepProject", "TypeSepProject")]
        public TypeSepProject TypeSepProject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeSepProject>("TestArchiveModel.FK_SEPProjectState_TypeSepProject", "TypeSepProject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeSepProject>("TestArchiveModel.FK_SEPProjectState_TypeSepProject", "TypeSepProject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TypeSepProject> TypeSepProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeSepProject>("TestArchiveModel.FK_SEPProjectState_TypeSepProject", "TypeSepProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TypeSepProject>("TestArchiveModel.FK_SEPProjectState_TypeSepProject", "TypeSepProject", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="SocialCause")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SocialCause : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SocialCause object.
        /// </summary>
        /// <param name="idSocialCause">Initial value of the IdSocialCause property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SocialCause CreateSocialCause(global::System.Int32 idSocialCause, global::System.String name)
        {
            SocialCause socialCause = new SocialCause();
            socialCause.IdSocialCause = idSocialCause;
            socialCause.Name = name;
            return socialCause;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdSocialCause
        {
            get
            {
                return _IdSocialCause;
            }
            set
            {
                if (_IdSocialCause != value)
                {
                    OnIdSocialCauseChanging(value);
                    ReportPropertyChanging("IdSocialCause");
                    _IdSocialCause = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdSocialCause");
                    OnIdSocialCauseChanged();
                }
            }
        }
        private global::System.Int32 _IdSocialCause;
        partial void OnIdSocialCauseChanging(global::System.Int32 value);
        partial void OnIdSocialCauseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_CapacitationCenter_SocialCause", "CapacitationCenter")]
        public EntityCollection<CapacitationCenter> CapacitationCenters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CapacitationCenter>("TestArchiveModel.FK_CapacitationCenter_SocialCause", "CapacitationCenter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CapacitationCenter>("TestArchiveModel.FK_CapacitationCenter_SocialCause", "CapacitationCenter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_CapacitationCenterInformation_SocialCause", "CapacitationCenterInformation")]
        public EntityCollection<CapacitationCenterInformation> CapacitationCenterInformations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CapacitationCenterInformation>("TestArchiveModel.FK_CapacitationCenterInformation_SocialCause", "CapacitationCenterInformation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CapacitationCenterInformation>("TestArchiveModel.FK_CapacitationCenterInformation_SocialCause", "CapacitationCenterInformation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Social_Organization_Information_Social_Cause", "SocialOrganizationInformation")]
        public EntityCollection<SocialOrganizationInformation> SocialOrganizationInformations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SocialOrganizationInformation>("TestArchiveModel.FK_Social_Organization_Information_Social_Cause", "SocialOrganizationInformation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SocialOrganizationInformation>("TestArchiveModel.FK_Social_Organization_Information_Social_Cause", "SocialOrganizationInformation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="SocialOrganization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SocialOrganization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SocialOrganization object.
        /// </summary>
        /// <param name="idSocialOrganization">Initial value of the IdSocialOrganization property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SocialOrganization CreateSocialOrganization(global::System.Int32 idSocialOrganization, global::System.String name)
        {
            SocialOrganization socialOrganization = new SocialOrganization();
            socialOrganization.IdSocialOrganization = idSocialOrganization;
            socialOrganization.Name = name;
            return socialOrganization;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdSocialOrganization
        {
            get
            {
                return _IdSocialOrganization;
            }
            set
            {
                if (_IdSocialOrganization != value)
                {
                    OnIdSocialOrganizationChanging(value);
                    ReportPropertyChanging("IdSocialOrganization");
                    _IdSocialOrganization = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdSocialOrganization");
                    OnIdSocialOrganizationChanged();
                }
            }
        }
        private global::System.Int32 _IdSocialOrganization;
        partial void OnIdSocialOrganizationChanging(global::System.Int32 value);
        partial void OnIdSocialOrganizationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_CapacitationCenter_SocialOrganization", "CapacitationCenter")]
        public EntityCollection<CapacitationCenter> CapacitationCenters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CapacitationCenter>("TestArchiveModel.FK_CapacitationCenter_SocialOrganization", "CapacitationCenter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CapacitationCenter>("TestArchiveModel.FK_CapacitationCenter_SocialOrganization", "CapacitationCenter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_CapacitationCenterInformation_SocialOrganization", "CapacitationCenterInformation")]
        public EntityCollection<CapacitationCenterInformation> CapacitationCenterInformations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CapacitationCenterInformation>("TestArchiveModel.FK_CapacitationCenterInformation_SocialOrganization", "CapacitationCenterInformation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CapacitationCenterInformation>("TestArchiveModel.FK_CapacitationCenterInformation_SocialOrganization", "CapacitationCenterInformation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="SocialOrganizationInformation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SocialOrganizationInformation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SocialOrganizationInformation object.
        /// </summary>
        /// <param name="idSocialOrganizationInformation">Initial value of the IdSocialOrganizationInformation property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="idSocialCause">Initial value of the IdSocialCause property.</param>
        /// <param name="idState">Initial value of the IdState property.</param>
        /// <param name="idPopulationAttended">Initial value of the IdPopulationAttended property.</param>
        public static SocialOrganizationInformation CreateSocialOrganizationInformation(global::System.Int32 idSocialOrganizationInformation, global::System.String name, global::System.Int32 idSocialCause, global::System.Int32 idState, global::System.Int32 idPopulationAttended)
        {
            SocialOrganizationInformation socialOrganizationInformation = new SocialOrganizationInformation();
            socialOrganizationInformation.IdSocialOrganizationInformation = idSocialOrganizationInformation;
            socialOrganizationInformation.Name = name;
            socialOrganizationInformation.IdSocialCause = idSocialCause;
            socialOrganizationInformation.IdState = idState;
            socialOrganizationInformation.IdPopulationAttended = idPopulationAttended;
            return socialOrganizationInformation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdSocialOrganizationInformation
        {
            get
            {
                return _IdSocialOrganizationInformation;
            }
            set
            {
                if (_IdSocialOrganizationInformation != value)
                {
                    OnIdSocialOrganizationInformationChanging(value);
                    ReportPropertyChanging("IdSocialOrganizationInformation");
                    _IdSocialOrganizationInformation = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdSocialOrganizationInformation");
                    OnIdSocialOrganizationInformationChanged();
                }
            }
        }
        private global::System.Int32 _IdSocialOrganizationInformation;
        partial void OnIdSocialOrganizationInformationChanging(global::System.Int32 value);
        partial void OnIdSocialOrganizationInformationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdSocialCause
        {
            get
            {
                return _IdSocialCause;
            }
            set
            {
                OnIdSocialCauseChanging(value);
                ReportPropertyChanging("IdSocialCause");
                _IdSocialCause = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdSocialCause");
                OnIdSocialCauseChanged();
            }
        }
        private global::System.Int32 _IdSocialCause;
        partial void OnIdSocialCauseChanging(global::System.Int32 value);
        partial void OnIdSocialCauseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdState
        {
            get
            {
                return _IdState;
            }
            set
            {
                OnIdStateChanging(value);
                ReportPropertyChanging("IdState");
                _IdState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdState");
                OnIdStateChanged();
            }
        }
        private global::System.Int32 _IdState;
        partial void OnIdStateChanging(global::System.Int32 value);
        partial void OnIdStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdPopulationAttended
        {
            get
            {
                return _IdPopulationAttended;
            }
            set
            {
                OnIdPopulationAttendedChanging(value);
                ReportPropertyChanging("IdPopulationAttended");
                _IdPopulationAttended = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdPopulationAttended");
                OnIdPopulationAttendedChanged();
            }
        }
        private global::System.Int32 _IdPopulationAttended;
        partial void OnIdPopulationAttendedChanging(global::System.Int32 value);
        partial void OnIdPopulationAttendedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Social_Organization_Information_PopulationAttended", "PopulationAttended")]
        public PopulationAttended PopulationAttended
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PopulationAttended>("TestArchiveModel.FK_Social_Organization_Information_PopulationAttended", "PopulationAttended").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PopulationAttended>("TestArchiveModel.FK_Social_Organization_Information_PopulationAttended", "PopulationAttended").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PopulationAttended> PopulationAttendedReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PopulationAttended>("TestArchiveModel.FK_Social_Organization_Information_PopulationAttended", "PopulationAttended");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PopulationAttended>("TestArchiveModel.FK_Social_Organization_Information_PopulationAttended", "PopulationAttended", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Social_Organization_Information_Social_Cause", "SocialCause")]
        public SocialCause SocialCause
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SocialCause>("TestArchiveModel.FK_Social_Organization_Information_Social_Cause", "SocialCause").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SocialCause>("TestArchiveModel.FK_Social_Organization_Information_Social_Cause", "SocialCause").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SocialCause> SocialCauseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SocialCause>("TestArchiveModel.FK_Social_Organization_Information_Social_Cause", "SocialCause");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SocialCause>("TestArchiveModel.FK_Social_Organization_Information_Social_Cause", "SocialCause", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Social_Organization_Information_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_Social_Organization_Information_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_Social_Organization_Information_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_Social_Organization_Information_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("TestArchiveModel.FK_Social_Organization_Information_State", "State", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="Source")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Source : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Source object.
        /// </summary>
        /// <param name="idSource">Initial value of the IdSource property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Source CreateSource(global::System.Int32 idSource, global::System.String name)
        {
            Source source = new Source();
            source.IdSource = idSource;
            source.Name = name;
            return source;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdSource
        {
            get
            {
                return _IdSource;
            }
            set
            {
                if (_IdSource != value)
                {
                    OnIdSourceChanging(value);
                    ReportPropertyChanging("IdSource");
                    _IdSource = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdSource");
                    OnIdSourceChanged();
                }
            }
        }
        private global::System.Int32 _IdSource;
        partial void OnIdSourceChanging(global::System.Int32 value);
        partial void OnIdSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_MicrosoftProgramState_Source1", "MicrosoftProgramState")]
        public EntityCollection<MicrosoftProgramState> MicrosoftProgramStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MicrosoftProgramState>("TestArchiveModel.FK_MicrosoftProgramState_Source1", "MicrosoftProgramState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MicrosoftProgramState>("TestArchiveModel.FK_MicrosoftProgramState_Source1", "MicrosoftProgramState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_StateProgram_Source", "StateProgram")]
        public EntityCollection<StateProgram> StatePrograms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StateProgram>("TestArchiveModel.FK_StateProgram_Source", "StateProgram");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StateProgram>("TestArchiveModel.FK_StateProgram_Source", "StateProgram", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="State")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class State : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new State object.
        /// </summary>
        /// <param name="idState">Initial value of the IdState property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static State CreateState(global::System.Int32 idState, global::System.String name)
        {
            State state = new State();
            state.IdState = idState;
            state.Name = name;
            return state;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdState
        {
            get
            {
                return _IdState;
            }
            set
            {
                if (_IdState != value)
                {
                    OnIdStateChanging(value);
                    ReportPropertyChanging("IdState");
                    _IdState = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdState");
                    OnIdStateChanged();
                }
            }
        }
        private global::System.Int32 _IdState;
        partial void OnIdStateChanging(global::System.Int32 value);
        partial void OnIdStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_CapacitationCenter_State", "CapacitationCenter")]
        public EntityCollection<CapacitationCenter> CapacitationCenters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CapacitationCenter>("TestArchiveModel.FK_CapacitationCenter_State", "CapacitationCenter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CapacitationCenter>("TestArchiveModel.FK_CapacitationCenter_State", "CapacitationCenter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Capacitation_Center_Information_State", "CapacitationCenterInformation")]
        public EntityCollection<CapacitationCenterInformation> CapacitationCenterInformations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CapacitationCenterInformation>("TestArchiveModel.FK_Capacitation_Center_Information_State", "CapacitationCenterInformation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CapacitationCenterInformation>("TestArchiveModel.FK_Capacitation_Center_Information_State", "CapacitationCenterInformation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Competition_State", "Competition")]
        public EntityCollection<Competition> Competitions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Competition>("TestArchiveModel.FK_Competition_State", "Competition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Competition>("TestArchiveModel.FK_Competition_State", "Competition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Education_Information_State_State", "EducationInformationState")]
        public EntityCollection<EducationInformationState> EducationInformationStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EducationInformationState>("TestArchiveModel.FK_Education_Information_State_State", "EducationInformationState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EducationInformationState>("TestArchiveModel.FK_Education_Information_State_State", "EducationInformationState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_MexicoAgreement_State", "MexicoAgreement")]
        public EntityCollection<MexicoAgreement> MexicoAgreements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MexicoAgreement>("TestArchiveModel.FK_MexicoAgreement_State", "MexicoAgreement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MexicoAgreement>("TestArchiveModel.FK_MexicoAgreement_State", "MexicoAgreement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_MicrosoftProgramState_State", "MicrosoftProgramState")]
        public EntityCollection<MicrosoftProgramState> MicrosoftProgramStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MicrosoftProgramState>("TestArchiveModel.FK_MicrosoftProgramState_State", "MicrosoftProgramState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MicrosoftProgramState>("TestArchiveModel.FK_MicrosoftProgramState_State", "MicrosoftProgramState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Municipality_State", "Municipality")]
        public EntityCollection<Municipality> Municipalities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Municipality>("TestArchiveModel.FK_Municipality_State", "Municipality");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Municipality>("TestArchiveModel.FK_Municipality_State", "Municipality", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_OpenSourceState_State", "OpenSourceState")]
        public EntityCollection<OpenSourceState> OpenSourceStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OpenSourceState>("TestArchiveModel.FK_OpenSourceState_State", "OpenSourceState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OpenSourceState>("TestArchiveModel.FK_OpenSourceState_State", "OpenSourceState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_OpenSourceStateCommunity_State", "OpenSourceStateCommunity")]
        public EntityCollection<OpenSourceStateCommunity> OpenSourceStateCommunities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OpenSourceStateCommunity>("TestArchiveModel.FK_OpenSourceStateCommunity_State", "OpenSourceStateCommunity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OpenSourceStateCommunity>("TestArchiveModel.FK_OpenSourceStateCommunity_State", "OpenSourceStateCommunity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_OpenSourceStateProvider_State", "OpenSourceStateProvider")]
        public EntityCollection<OpenSourceStateProvider> OpenSourceStateProviders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OpenSourceStateProvider>("TestArchiveModel.FK_OpenSourceStateProvider_State", "OpenSourceStateProvider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OpenSourceStateProvider>("TestArchiveModel.FK_OpenSourceStateProvider_State", "OpenSourceStateProvider", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Political_Information_State_State", "PoliticalInformationState")]
        public EntityCollection<PoliticalInformationState> PoliticalInformationStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PoliticalInformationState>("TestArchiveModel.FK_Political_Information_State_State", "PoliticalInformationState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PoliticalInformationState>("TestArchiveModel.FK_Political_Information_State_State", "PoliticalInformationState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Social_Organization_Information_State", "SocialOrganizationInformation")]
        public EntityCollection<SocialOrganizationInformation> SocialOrganizationInformations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SocialOrganizationInformation>("TestArchiveModel.FK_Social_Organization_Information_State", "SocialOrganizationInformation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SocialOrganizationInformation>("TestArchiveModel.FK_Social_Organization_Information_State", "SocialOrganizationInformation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_State_Economic_Info_State", "StateEconomicInfo")]
        public EntityCollection<StateEconomicInfo> StateEconomicInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StateEconomicInfo>("TestArchiveModel.FK_State_Economic_Info_State", "StateEconomicInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StateEconomicInfo>("TestArchiveModel.FK_State_Economic_Info_State", "StateEconomicInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_StateProgram_State", "StateProgram")]
        public EntityCollection<StateProgram> StatePrograms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StateProgram>("TestArchiveModel.FK_StateProgram_State", "StateProgram");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StateProgram>("TestArchiveModel.FK_StateProgram_State", "StateProgram", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Universities_State", "Universities")]
        public EntityCollection<University> Universities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<University>("TestArchiveModel.FK_Universities_State", "Universities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<University>("TestArchiveModel.FK_Universities_State", "Universities", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="StateEconomicInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StateEconomicInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StateEconomicInfo object.
        /// </summary>
        /// <param name="idStateEconomicInfo">Initial value of the IdStateEconomicInfo property.</param>
        /// <param name="idState">Initial value of the IdState property.</param>
        /// <param name="fromDate">Initial value of the FromDate property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static StateEconomicInfo CreateStateEconomicInfo(global::System.Int32 idStateEconomicInfo, global::System.Int32 idState, global::System.DateTime fromDate, global::System.Boolean status)
        {
            StateEconomicInfo stateEconomicInfo = new StateEconomicInfo();
            stateEconomicInfo.IdStateEconomicInfo = idStateEconomicInfo;
            stateEconomicInfo.IdState = idState;
            stateEconomicInfo.FromDate = fromDate;
            stateEconomicInfo.Status = status;
            return stateEconomicInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdStateEconomicInfo
        {
            get
            {
                return _IdStateEconomicInfo;
            }
            set
            {
                if (_IdStateEconomicInfo != value)
                {
                    OnIdStateEconomicInfoChanging(value);
                    ReportPropertyChanging("IdStateEconomicInfo");
                    _IdStateEconomicInfo = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdStateEconomicInfo");
                    OnIdStateEconomicInfoChanged();
                }
            }
        }
        private global::System.Int32 _IdStateEconomicInfo;
        partial void OnIdStateEconomicInfoChanging(global::System.Int32 value);
        partial void OnIdStateEconomicInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> BudgetPublicAdministration
        {
            get
            {
                return _BudgetPublicAdministration;
            }
            set
            {
                OnBudgetPublicAdministrationChanging(value);
                ReportPropertyChanging("BudgetPublicAdministration");
                _BudgetPublicAdministration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BudgetPublicAdministration");
                OnBudgetPublicAdministrationChanged();
            }
        }
        private Nullable<global::System.Double> _BudgetPublicAdministration;
        partial void OnBudgetPublicAdministrationChanging(Nullable<global::System.Double> value);
        partial void OnBudgetPublicAdministrationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> BudgetTIC
        {
            get
            {
                return _BudgetTIC;
            }
            set
            {
                OnBudgetTICChanging(value);
                ReportPropertyChanging("BudgetTIC");
                _BudgetTIC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BudgetTIC");
                OnBudgetTICChanged();
            }
        }
        private Nullable<global::System.Double> _BudgetTIC;
        partial void OnBudgetTICChanging(Nullable<global::System.Double> value);
        partial void OnBudgetTICChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> BudgetSoftware
        {
            get
            {
                return _BudgetSoftware;
            }
            set
            {
                OnBudgetSoftwareChanging(value);
                ReportPropertyChanging("BudgetSoftware");
                _BudgetSoftware = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BudgetSoftware");
                OnBudgetSoftwareChanged();
            }
        }
        private Nullable<global::System.Double> _BudgetSoftware;
        partial void OnBudgetSoftwareChanging(Nullable<global::System.Double> value);
        partial void OnBudgetSoftwareChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdState
        {
            get
            {
                return _IdState;
            }
            set
            {
                OnIdStateChanging(value);
                ReportPropertyChanging("IdState");
                _IdState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdState");
                OnIdStateChanged();
            }
        }
        private global::System.Int32 _IdState;
        partial void OnIdStateChanging(global::System.Int32 value);
        partial void OnIdStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FromDate
        {
            get
            {
                return _FromDate;
            }
            set
            {
                OnFromDateChanging(value);
                ReportPropertyChanging("FromDate");
                _FromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromDate");
                OnFromDateChanged();
            }
        }
        private global::System.DateTime _FromDate;
        partial void OnFromDateChanging(global::System.DateTime value);
        partial void OnFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Boolean _Status;
        partial void OnStatusChanging(global::System.Boolean value);
        partial void OnStatusChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_State_Economic_Info_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_State_Economic_Info_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_State_Economic_Info_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_State_Economic_Info_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("TestArchiveModel.FK_State_Economic_Info_State", "State", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="StateProgram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StateProgram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StateProgram object.
        /// </summary>
        /// <param name="idStateProgram">Initial value of the IdStateProgram property.</param>
        /// <param name="idProgram">Initial value of the IdProgram property.</param>
        /// <param name="idPartner">Initial value of the IdPartner property.</param>
        /// <param name="idOwner">Initial value of the IdOwner property.</param>
        /// <param name="idSource">Initial value of the IdSource property.</param>
        /// <param name="idType">Initial value of the IdType property.</param>
        /// <param name="dateFrom">Initial value of the DateFrom property.</param>
        /// <param name="dateTo">Initial value of the DateTo property.</param>
        /// <param name="investment">Initial value of the Investment property.</param>
        /// <param name="rOI">Initial value of the ROI property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="progress">Initial value of the Progress property.</param>
        /// <param name="idState">Initial value of the IdState property.</param>
        public static StateProgram CreateStateProgram(global::System.Int32 idStateProgram, global::System.Int32 idProgram, global::System.Int32 idPartner, global::System.Int32 idOwner, global::System.Int32 idSource, global::System.Int32 idType, global::System.DateTime dateFrom, global::System.DateTime dateTo, global::System.Double investment, global::System.Double rOI, global::System.Int32 number, global::System.Int32 progress, global::System.Int32 idState)
        {
            StateProgram stateProgram = new StateProgram();
            stateProgram.IdStateProgram = idStateProgram;
            stateProgram.IdProgram = idProgram;
            stateProgram.IdPartner = idPartner;
            stateProgram.IdOwner = idOwner;
            stateProgram.IdSource = idSource;
            stateProgram.IdType = idType;
            stateProgram.DateFrom = dateFrom;
            stateProgram.DateTo = dateTo;
            stateProgram.Investment = investment;
            stateProgram.ROI = rOI;
            stateProgram.Number = number;
            stateProgram.Progress = progress;
            stateProgram.IdState = idState;
            return stateProgram;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdStateProgram
        {
            get
            {
                return _IdStateProgram;
            }
            set
            {
                if (_IdStateProgram != value)
                {
                    OnIdStateProgramChanging(value);
                    ReportPropertyChanging("IdStateProgram");
                    _IdStateProgram = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdStateProgram");
                    OnIdStateProgramChanged();
                }
            }
        }
        private global::System.Int32 _IdStateProgram;
        partial void OnIdStateProgramChanging(global::System.Int32 value);
        partial void OnIdStateProgramChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdProgram
        {
            get
            {
                return _IdProgram;
            }
            set
            {
                OnIdProgramChanging(value);
                ReportPropertyChanging("IdProgram");
                _IdProgram = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdProgram");
                OnIdProgramChanged();
            }
        }
        private global::System.Int32 _IdProgram;
        partial void OnIdProgramChanging(global::System.Int32 value);
        partial void OnIdProgramChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdPartner
        {
            get
            {
                return _IdPartner;
            }
            set
            {
                OnIdPartnerChanging(value);
                ReportPropertyChanging("IdPartner");
                _IdPartner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdPartner");
                OnIdPartnerChanged();
            }
        }
        private global::System.Int32 _IdPartner;
        partial void OnIdPartnerChanging(global::System.Int32 value);
        partial void OnIdPartnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdOwner
        {
            get
            {
                return _IdOwner;
            }
            set
            {
                OnIdOwnerChanging(value);
                ReportPropertyChanging("IdOwner");
                _IdOwner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdOwner");
                OnIdOwnerChanged();
            }
        }
        private global::System.Int32 _IdOwner;
        partial void OnIdOwnerChanging(global::System.Int32 value);
        partial void OnIdOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdSource
        {
            get
            {
                return _IdSource;
            }
            set
            {
                OnIdSourceChanging(value);
                ReportPropertyChanging("IdSource");
                _IdSource = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdSource");
                OnIdSourceChanged();
            }
        }
        private global::System.Int32 _IdSource;
        partial void OnIdSourceChanging(global::System.Int32 value);
        partial void OnIdSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdType
        {
            get
            {
                return _IdType;
            }
            set
            {
                OnIdTypeChanging(value);
                ReportPropertyChanging("IdType");
                _IdType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdType");
                OnIdTypeChanged();
            }
        }
        private global::System.Int32 _IdType;
        partial void OnIdTypeChanging(global::System.Int32 value);
        partial void OnIdTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IdContactMsft
        {
            get
            {
                return _IdContactMsft;
            }
            set
            {
                OnIdContactMsftChanging(value);
                ReportPropertyChanging("IdContactMsft");
                _IdContactMsft = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdContactMsft");
                OnIdContactMsftChanged();
            }
        }
        private Nullable<global::System.Int32> _IdContactMsft;
        partial void OnIdContactMsftChanging(Nullable<global::System.Int32> value);
        partial void OnIdContactMsftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IdContactState
        {
            get
            {
                return _IdContactState;
            }
            set
            {
                OnIdContactStateChanging(value);
                ReportPropertyChanging("IdContactState");
                _IdContactState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdContactState");
                OnIdContactStateChanged();
            }
        }
        private Nullable<global::System.Int32> _IdContactState;
        partial void OnIdContactStateChanging(Nullable<global::System.Int32> value);
        partial void OnIdContactStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateFrom
        {
            get
            {
                return _DateFrom;
            }
            set
            {
                OnDateFromChanging(value);
                ReportPropertyChanging("DateFrom");
                _DateFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateFrom");
                OnDateFromChanged();
            }
        }
        private global::System.DateTime _DateFrom;
        partial void OnDateFromChanging(global::System.DateTime value);
        partial void OnDateFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTo
        {
            get
            {
                return _DateTo;
            }
            set
            {
                OnDateToChanging(value);
                ReportPropertyChanging("DateTo");
                _DateTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTo");
                OnDateToChanged();
            }
        }
        private global::System.DateTime _DateTo;
        partial void OnDateToChanging(global::System.DateTime value);
        partial void OnDateToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Investment
        {
            get
            {
                return _Investment;
            }
            set
            {
                OnInvestmentChanging(value);
                ReportPropertyChanging("Investment");
                _Investment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Investment");
                OnInvestmentChanged();
            }
        }
        private global::System.Double _Investment;
        partial void OnInvestmentChanging(global::System.Double value);
        partial void OnInvestmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ROI
        {
            get
            {
                return _ROI;
            }
            set
            {
                OnROIChanging(value);
                ReportPropertyChanging("ROI");
                _ROI = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ROI");
                OnROIChanged();
            }
        }
        private global::System.Double _ROI;
        partial void OnROIChanging(global::System.Double value);
        partial void OnROIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Progress
        {
            get
            {
                return _Progress;
            }
            set
            {
                OnProgressChanging(value);
                ReportPropertyChanging("Progress");
                _Progress = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Progress");
                OnProgressChanged();
            }
        }
        private global::System.Int32 _Progress;
        partial void OnProgressChanging(global::System.Int32 value);
        partial void OnProgressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdState
        {
            get
            {
                return _IdState;
            }
            set
            {
                OnIdStateChanging(value);
                ReportPropertyChanging("IdState");
                _IdState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdState");
                OnIdStateChanged();
            }
        }
        private global::System.Int32 _IdState;
        partial void OnIdStateChanging(global::System.Int32 value);
        partial void OnIdStateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_StateProgram1_Contacts", "Contacts")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("TestArchiveModel.FK_StateProgram1_Contacts", "Contacts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("TestArchiveModel.FK_StateProgram1_Contacts", "Contacts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("TestArchiveModel.FK_StateProgram1_Contacts", "Contacts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("TestArchiveModel.FK_StateProgram1_Contacts", "Contacts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_StateProgram1_Contacts1", "Contacts")]
        public Contact Contact1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("TestArchiveModel.FK_StateProgram1_Contacts1", "Contacts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("TestArchiveModel.FK_StateProgram1_Contacts1", "Contacts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> Contact1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("TestArchiveModel.FK_StateProgram1_Contacts1", "Contacts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("TestArchiveModel.FK_StateProgram1_Contacts1", "Contacts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_StateProgram_Owner", "Owner")]
        public Owner Owner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Owner>("TestArchiveModel.FK_StateProgram_Owner", "Owner").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Owner>("TestArchiveModel.FK_StateProgram_Owner", "Owner").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Owner> OwnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Owner>("TestArchiveModel.FK_StateProgram_Owner", "Owner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Owner>("TestArchiveModel.FK_StateProgram_Owner", "Owner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_StateProgram_Partner", "Partner")]
        public Partner Partner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Partner>("TestArchiveModel.FK_StateProgram_Partner", "Partner").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Partner>("TestArchiveModel.FK_StateProgram_Partner", "Partner").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Partner> PartnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Partner>("TestArchiveModel.FK_StateProgram_Partner", "Partner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Partner>("TestArchiveModel.FK_StateProgram_Partner", "Partner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_StateProgram_Program", "Program")]
        public Program Program
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Program>("TestArchiveModel.FK_StateProgram_Program", "Program").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Program>("TestArchiveModel.FK_StateProgram_Program", "Program").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Program> ProgramReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Program>("TestArchiveModel.FK_StateProgram_Program", "Program");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Program>("TestArchiveModel.FK_StateProgram_Program", "Program", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_StateProgram_Source", "Source")]
        public Source Source
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("TestArchiveModel.FK_StateProgram_Source", "Source").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("TestArchiveModel.FK_StateProgram_Source", "Source").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Source> SourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("TestArchiveModel.FK_StateProgram_Source", "Source");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Source>("TestArchiveModel.FK_StateProgram_Source", "Source", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_StateProgram_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_StateProgram_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_StateProgram_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_StateProgram_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("TestArchiveModel.FK_StateProgram_State", "State", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_StateProgram_TypeSource", "TypeSource")]
        public TypeSource TypeSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeSource>("TestArchiveModel.FK_StateProgram_TypeSource", "TypeSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeSource>("TestArchiveModel.FK_StateProgram_TypeSource", "TypeSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TypeSource> TypeSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeSource>("TestArchiveModel.FK_StateProgram_TypeSource", "TypeSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TypeSource>("TestArchiveModel.FK_StateProgram_TypeSource", "TypeSource", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="StudentsInformation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StudentsInformation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StudentsInformation object.
        /// </summary>
        /// <param name="idStudentInformation">Initial value of the IdStudentInformation property.</param>
        /// <param name="idEducationInformationState">Initial value of the IdEducationInformationState property.</param>
        /// <param name="idSchoolType">Initial value of the IdSchoolType property.</param>
        /// <param name="idSchoolLevel">Initial value of the IdSchoolLevel property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        public static StudentsInformation CreateStudentsInformation(global::System.Int32 idStudentInformation, global::System.Int32 idEducationInformationState, global::System.Int32 idSchoolType, global::System.Int32 idSchoolLevel, global::System.Int32 number)
        {
            StudentsInformation studentsInformation = new StudentsInformation();
            studentsInformation.IdStudentInformation = idStudentInformation;
            studentsInformation.IdEducationInformationState = idEducationInformationState;
            studentsInformation.IdSchoolType = idSchoolType;
            studentsInformation.IdSchoolLevel = idSchoolLevel;
            studentsInformation.Number = number;
            return studentsInformation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdStudentInformation
        {
            get
            {
                return _IdStudentInformation;
            }
            set
            {
                if (_IdStudentInformation != value)
                {
                    OnIdStudentInformationChanging(value);
                    ReportPropertyChanging("IdStudentInformation");
                    _IdStudentInformation = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdStudentInformation");
                    OnIdStudentInformationChanged();
                }
            }
        }
        private global::System.Int32 _IdStudentInformation;
        partial void OnIdStudentInformationChanging(global::System.Int32 value);
        partial void OnIdStudentInformationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdEducationInformationState
        {
            get
            {
                return _IdEducationInformationState;
            }
            set
            {
                OnIdEducationInformationStateChanging(value);
                ReportPropertyChanging("IdEducationInformationState");
                _IdEducationInformationState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdEducationInformationState");
                OnIdEducationInformationStateChanged();
            }
        }
        private global::System.Int32 _IdEducationInformationState;
        partial void OnIdEducationInformationStateChanging(global::System.Int32 value);
        partial void OnIdEducationInformationStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdSchoolType
        {
            get
            {
                return _IdSchoolType;
            }
            set
            {
                OnIdSchoolTypeChanging(value);
                ReportPropertyChanging("IdSchoolType");
                _IdSchoolType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdSchoolType");
                OnIdSchoolTypeChanged();
            }
        }
        private global::System.Int32 _IdSchoolType;
        partial void OnIdSchoolTypeChanging(global::System.Int32 value);
        partial void OnIdSchoolTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdSchoolLevel
        {
            get
            {
                return _IdSchoolLevel;
            }
            set
            {
                OnIdSchoolLevelChanging(value);
                ReportPropertyChanging("IdSchoolLevel");
                _IdSchoolLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdSchoolLevel");
                OnIdSchoolLevelChanged();
            }
        }
        private global::System.Int32 _IdSchoolLevel;
        partial void OnIdSchoolLevelChanging(global::System.Int32 value);
        partial void OnIdSchoolLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Students_Information_Education_Information_State", "EducationInformationState")]
        public EducationInformationState EducationInformationState
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationInformationState>("TestArchiveModel.FK_Students_Information_Education_Information_State", "EducationInformationState").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationInformationState>("TestArchiveModel.FK_Students_Information_Education_Information_State", "EducationInformationState").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EducationInformationState> EducationInformationStateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationInformationState>("TestArchiveModel.FK_Students_Information_Education_Information_State", "EducationInformationState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EducationInformationState>("TestArchiveModel.FK_Students_Information_Education_Information_State", "EducationInformationState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Students_Information_School_Level", "SchoolLevel")]
        public SchoolLevel SchoolLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolLevel>("TestArchiveModel.FK_Students_Information_School_Level", "SchoolLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolLevel>("TestArchiveModel.FK_Students_Information_School_Level", "SchoolLevel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SchoolLevel> SchoolLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolLevel>("TestArchiveModel.FK_Students_Information_School_Level", "SchoolLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SchoolLevel>("TestArchiveModel.FK_Students_Information_School_Level", "SchoolLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Students_Information_School_Type", "SchoolType")]
        public SchoolType SchoolType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolType>("TestArchiveModel.FK_Students_Information_School_Type", "SchoolType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolType>("TestArchiveModel.FK_Students_Information_School_Type", "SchoolType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SchoolType> SchoolTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolType>("TestArchiveModel.FK_Students_Information_School_Type", "SchoolType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SchoolType>("TestArchiveModel.FK_Students_Information_School_Type", "SchoolType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="TeachersInformation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeachersInformation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeachersInformation object.
        /// </summary>
        /// <param name="idTeachersInformation">Initial value of the IdTeachersInformation property.</param>
        /// <param name="idEducationInformationState">Initial value of the IdEducationInformationState property.</param>
        /// <param name="idSchoolLevel">Initial value of the IdSchoolLevel property.</param>
        /// <param name="idSchoolType">Initial value of the IdSchoolType property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        public static TeachersInformation CreateTeachersInformation(global::System.Int32 idTeachersInformation, global::System.Int32 idEducationInformationState, global::System.Int32 idSchoolLevel, global::System.Int32 idSchoolType, global::System.Int32 number)
        {
            TeachersInformation teachersInformation = new TeachersInformation();
            teachersInformation.IdTeachersInformation = idTeachersInformation;
            teachersInformation.IdEducationInformationState = idEducationInformationState;
            teachersInformation.IdSchoolLevel = idSchoolLevel;
            teachersInformation.IdSchoolType = idSchoolType;
            teachersInformation.Number = number;
            return teachersInformation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdTeachersInformation
        {
            get
            {
                return _IdTeachersInformation;
            }
            set
            {
                if (_IdTeachersInformation != value)
                {
                    OnIdTeachersInformationChanging(value);
                    ReportPropertyChanging("IdTeachersInformation");
                    _IdTeachersInformation = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdTeachersInformation");
                    OnIdTeachersInformationChanged();
                }
            }
        }
        private global::System.Int32 _IdTeachersInformation;
        partial void OnIdTeachersInformationChanging(global::System.Int32 value);
        partial void OnIdTeachersInformationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdEducationInformationState
        {
            get
            {
                return _IdEducationInformationState;
            }
            set
            {
                OnIdEducationInformationStateChanging(value);
                ReportPropertyChanging("IdEducationInformationState");
                _IdEducationInformationState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdEducationInformationState");
                OnIdEducationInformationStateChanged();
            }
        }
        private global::System.Int32 _IdEducationInformationState;
        partial void OnIdEducationInformationStateChanging(global::System.Int32 value);
        partial void OnIdEducationInformationStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdSchoolLevel
        {
            get
            {
                return _IdSchoolLevel;
            }
            set
            {
                OnIdSchoolLevelChanging(value);
                ReportPropertyChanging("IdSchoolLevel");
                _IdSchoolLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdSchoolLevel");
                OnIdSchoolLevelChanged();
            }
        }
        private global::System.Int32 _IdSchoolLevel;
        partial void OnIdSchoolLevelChanging(global::System.Int32 value);
        partial void OnIdSchoolLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdSchoolType
        {
            get
            {
                return _IdSchoolType;
            }
            set
            {
                OnIdSchoolTypeChanging(value);
                ReportPropertyChanging("IdSchoolType");
                _IdSchoolType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdSchoolType");
                OnIdSchoolTypeChanged();
            }
        }
        private global::System.Int32 _IdSchoolType;
        partial void OnIdSchoolTypeChanging(global::System.Int32 value);
        partial void OnIdSchoolTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Teachers_Information_Education_Information_State", "EducationInformationState")]
        public EducationInformationState EducationInformationState
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationInformationState>("TestArchiveModel.FK_Teachers_Information_Education_Information_State", "EducationInformationState").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationInformationState>("TestArchiveModel.FK_Teachers_Information_Education_Information_State", "EducationInformationState").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EducationInformationState> EducationInformationStateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationInformationState>("TestArchiveModel.FK_Teachers_Information_Education_Information_State", "EducationInformationState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EducationInformationState>("TestArchiveModel.FK_Teachers_Information_Education_Information_State", "EducationInformationState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Teachers_Information_School_Level", "SchoolLevel")]
        public SchoolLevel SchoolLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolLevel>("TestArchiveModel.FK_Teachers_Information_School_Level", "SchoolLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolLevel>("TestArchiveModel.FK_Teachers_Information_School_Level", "SchoolLevel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SchoolLevel> SchoolLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolLevel>("TestArchiveModel.FK_Teachers_Information_School_Level", "SchoolLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SchoolLevel>("TestArchiveModel.FK_Teachers_Information_School_Level", "SchoolLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Teachers_Information_School_Type", "SchoolType")]
        public SchoolType SchoolType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolType>("TestArchiveModel.FK_Teachers_Information_School_Type", "SchoolType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolType>("TestArchiveModel.FK_Teachers_Information_School_Type", "SchoolType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SchoolType> SchoolTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolType>("TestArchiveModel.FK_Teachers_Information_School_Type", "SchoolType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SchoolType>("TestArchiveModel.FK_Teachers_Information_School_Type", "SchoolType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="TypeAgreement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TypeAgreement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TypeAgreement object.
        /// </summary>
        /// <param name="idTypeAgreement">Initial value of the IdTypeAgreement property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static TypeAgreement CreateTypeAgreement(global::System.Int32 idTypeAgreement, global::System.String name)
        {
            TypeAgreement typeAgreement = new TypeAgreement();
            typeAgreement.IdTypeAgreement = idTypeAgreement;
            typeAgreement.Name = name;
            return typeAgreement;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdTypeAgreement
        {
            get
            {
                return _IdTypeAgreement;
            }
            set
            {
                if (_IdTypeAgreement != value)
                {
                    OnIdTypeAgreementChanging(value);
                    ReportPropertyChanging("IdTypeAgreement");
                    _IdTypeAgreement = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdTypeAgreement");
                    OnIdTypeAgreementChanged();
                }
            }
        }
        private global::System.Int32 _IdTypeAgreement;
        partial void OnIdTypeAgreementChanging(global::System.Int32 value);
        partial void OnIdTypeAgreementChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_MexicoAgreement_TypeAgreement", "MexicoAgreement")]
        public EntityCollection<MexicoAgreement> MexicoAgreements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MexicoAgreement>("TestArchiveModel.FK_MexicoAgreement_TypeAgreement", "MexicoAgreement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MexicoAgreement>("TestArchiveModel.FK_MexicoAgreement_TypeAgreement", "MexicoAgreement", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="TypeProduct")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TypeProduct : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TypeProduct object.
        /// </summary>
        /// <param name="idTypeProduct">Initial value of the IdTypeProduct property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static TypeProduct CreateTypeProduct(global::System.Int32 idTypeProduct, global::System.String name)
        {
            TypeProduct typeProduct = new TypeProduct();
            typeProduct.IdTypeProduct = idTypeProduct;
            typeProduct.Name = name;
            return typeProduct;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdTypeProduct
        {
            get
            {
                return _IdTypeProduct;
            }
            set
            {
                if (_IdTypeProduct != value)
                {
                    OnIdTypeProductChanging(value);
                    ReportPropertyChanging("IdTypeProduct");
                    _IdTypeProduct = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdTypeProduct");
                    OnIdTypeProductChanged();
                }
            }
        }
        private global::System.Int32 _IdTypeProduct;
        partial void OnIdTypeProductChanging(global::System.Int32 value);
        partial void OnIdTypeProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_OpenSourceState_TypeProduct", "OpenSourceState")]
        public EntityCollection<OpenSourceState> OpenSourceStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OpenSourceState>("TestArchiveModel.FK_OpenSourceState_TypeProduct", "OpenSourceState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OpenSourceState>("TestArchiveModel.FK_OpenSourceState_TypeProduct", "OpenSourceState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Products_TypeProduct", "Products")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("TestArchiveModel.FK_Products_TypeProduct", "Products");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("TestArchiveModel.FK_Products_TypeProduct", "Products", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="TypeSepProject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TypeSepProject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TypeSepProject object.
        /// </summary>
        /// <param name="idTypeSepProject">Initial value of the IdTypeSepProject property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static TypeSepProject CreateTypeSepProject(global::System.Int32 idTypeSepProject, global::System.String name)
        {
            TypeSepProject typeSepProject = new TypeSepProject();
            typeSepProject.IdTypeSepProject = idTypeSepProject;
            typeSepProject.Name = name;
            return typeSepProject;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdTypeSepProject
        {
            get
            {
                return _IdTypeSepProject;
            }
            set
            {
                if (_IdTypeSepProject != value)
                {
                    OnIdTypeSepProjectChanging(value);
                    ReportPropertyChanging("IdTypeSepProject");
                    _IdTypeSepProject = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdTypeSepProject");
                    OnIdTypeSepProjectChanged();
                }
            }
        }
        private global::System.Int32 _IdTypeSepProject;
        partial void OnIdTypeSepProjectChanging(global::System.Int32 value);
        partial void OnIdTypeSepProjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_SEPProjectState_TypeSepProject", "SEPProjectState")]
        public EntityCollection<SEPProjectState> SEPProjectStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SEPProjectState>("TestArchiveModel.FK_SEPProjectState_TypeSepProject", "SEPProjectState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SEPProjectState>("TestArchiveModel.FK_SEPProjectState_TypeSepProject", "SEPProjectState", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="TypeSource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TypeSource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TypeSource object.
        /// </summary>
        /// <param name="idType">Initial value of the IdType property.</param>
        public static TypeSource CreateTypeSource(global::System.Int32 idType)
        {
            TypeSource typeSource = new TypeSource();
            typeSource.IdType = idType;
            return typeSource;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdType
        {
            get
            {
                return _IdType;
            }
            set
            {
                if (_IdType != value)
                {
                    OnIdTypeChanging(value);
                    ReportPropertyChanging("IdType");
                    _IdType = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdType");
                    OnIdTypeChanged();
                }
            }
        }
        private global::System.Int32 _IdType;
        partial void OnIdTypeChanging(global::System.Int32 value);
        partial void OnIdTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Competition_Types", "Competition")]
        public EntityCollection<Competition> Competitions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Competition>("TestArchiveModel.FK_Competition_Types", "Competition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Competition>("TestArchiveModel.FK_Competition_Types", "Competition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_MicrosoftProgramState_Types", "MicrosoftProgramState")]
        public EntityCollection<MicrosoftProgramState> MicrosoftProgramStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MicrosoftProgramState>("TestArchiveModel.FK_MicrosoftProgramState_Types", "MicrosoftProgramState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MicrosoftProgramState>("TestArchiveModel.FK_MicrosoftProgramState_Types", "MicrosoftProgramState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_StateProgram_TypeSource", "StateProgram")]
        public EntityCollection<StateProgram> StatePrograms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StateProgram>("TestArchiveModel.FK_StateProgram_TypeSource", "StateProgram");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StateProgram>("TestArchiveModel.FK_StateProgram_TypeSource", "StateProgram", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="University")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class University : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new University object.
        /// </summary>
        /// <param name="idUniversity">Initial value of the IdUniversity property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="idState">Initial value of the IdState property.</param>
        public static University CreateUniversity(global::System.Int32 idUniversity, global::System.String name, global::System.Int32 idState)
        {
            University university = new University();
            university.IdUniversity = idUniversity;
            university.Name = name;
            university.IdState = idState;
            return university;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdUniversity
        {
            get
            {
                return _IdUniversity;
            }
            set
            {
                if (_IdUniversity != value)
                {
                    OnIdUniversityChanging(value);
                    ReportPropertyChanging("IdUniversity");
                    _IdUniversity = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdUniversity");
                    OnIdUniversityChanged();
                }
            }
        }
        private global::System.Int32 _IdUniversity;
        partial void OnIdUniversityChanging(global::System.Int32 value);
        partial void OnIdUniversityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdState
        {
            get
            {
                return _IdState;
            }
            set
            {
                OnIdStateChanging(value);
                ReportPropertyChanging("IdState");
                _IdState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdState");
                OnIdStateChanged();
            }
        }
        private global::System.Int32 _IdState;
        partial void OnIdStateChanging(global::System.Int32 value);
        partial void OnIdStateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Main_Universities_Universities", "MainUniversities")]
        public EntityCollection<MainUniversity> MainUniversities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MainUniversity>("TestArchiveModel.FK_Main_Universities_Universities", "MainUniversities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MainUniversity>("TestArchiveModel.FK_Main_Universities_Universities", "MainUniversities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestArchiveModel", "FK_Universities_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_Universities_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_Universities_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TestArchiveModel.FK_Universities_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("TestArchiveModel.FK_Universities_State", "State", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestArchiveModel", Name="Year")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Year : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Year object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="year1">Initial value of the Year1 property.</param>
        public static Year CreateYear(global::System.Int32 id, global::System.Int32 year1)
        {
            Year year = new Year();
            year.Id = id;
            year.Year1 = year1;
            return year;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year1
        {
            get
            {
                return _Year1;
            }
            set
            {
                OnYear1Changing(value);
                ReportPropertyChanging("Year1");
                _Year1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year1");
                OnYear1Changed();
            }
        }
        private global::System.Int32 _Year1;
        partial void OnYear1Changing(global::System.Int32 value);
        partial void OnYear1Changed();

        #endregion
    
    }

    #endregion
    
}
